// This source code was generated by ClangCaster
using System;
using System.Runtime.InteropServices;

namespace NWindowsKits
{
    // C:/Program Files (x86)/Windows Kits/10/Include/10.0.18362.0/um/objidlbase.h:5982
    public class IAddrExclusionControl : IUnknown // 1
    {
        static Guid s_uuid = new Guid("00000148-0000-0000-c000-000000000046");
        public static new ref Guid IID => ref s_uuid;
        public override ref Guid GetIID() { return ref s_uuid; }

        public int GetCurrentAddrExclusionList(ref Guid riid, ref IntPtr ppEnumerator)
        {
            if(m_GetCurrentAddrExclusionListFunc==null){
                var fp = GetFunctionPointer(3);
                m_GetCurrentAddrExclusionListFunc = (GetCurrentAddrExclusionListFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetCurrentAddrExclusionListFunc));
            } 
            
            return  m_GetCurrentAddrExclusionListFunc(m_ptr, ref riid, ref ppEnumerator);
        }
        delegate int GetCurrentAddrExclusionListFunc(IntPtr self, ref Guid riid, ref IntPtr ppEnumerator);
        GetCurrentAddrExclusionListFunc m_GetCurrentAddrExclusionListFunc;

        public int UpdateAddrExclusionList(IntPtr pEnumerator)
        {
            if(m_UpdateAddrExclusionListFunc==null){
                var fp = GetFunctionPointer(4);
                m_UpdateAddrExclusionListFunc = (UpdateAddrExclusionListFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(UpdateAddrExclusionListFunc));
            } 
            
            return  m_UpdateAddrExclusionListFunc(m_ptr, pEnumerator);
        }
        delegate int UpdateAddrExclusionListFunc(IntPtr self, IntPtr pEnumerator);
        UpdateAddrExclusionListFunc m_UpdateAddrExclusionListFunc;

    }
}
