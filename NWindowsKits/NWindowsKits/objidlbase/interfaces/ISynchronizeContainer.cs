// This source code was generated by ClangCaster
using System;
using System.Runtime.InteropServices;

namespace NWindowsKits
{
    // C:/Program Files (x86)/Windows Kits/10/Include/10.0.18362.0/um/objidlbase.h:5101
    public class ISynchronizeContainer : IUnknown // 1
    {
        static Guid s_uuid = new Guid("00000033-0000-0000-c000-000000000046");
        public static new ref Guid IID => ref s_uuid;
        public override ref Guid GetIID() { return ref s_uuid; }

        public int AddSynchronize(IntPtr pSync)
        {
            if(m_AddSynchronizeFunc==null){
                var fp = GetFunctionPointer(3);
                m_AddSynchronizeFunc = (AddSynchronizeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AddSynchronizeFunc));
            } 
            return  m_AddSynchronizeFunc(m_ptr, pSync);
        }
        delegate int AddSynchronizeFunc(IntPtr self, IntPtr pSync);
        AddSynchronizeFunc m_AddSynchronizeFunc;

        public int WaitMultiple(uint dwFlags, uint dwTimeOut, ref IntPtr ppSync)
        {
            if(m_WaitMultipleFunc==null){
                var fp = GetFunctionPointer(4);
                m_WaitMultipleFunc = (WaitMultipleFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(WaitMultipleFunc));
            } 
            return  m_WaitMultipleFunc(m_ptr, dwFlags, dwTimeOut, ref ppSync);
        }
        delegate int WaitMultipleFunc(IntPtr self, uint dwFlags, uint dwTimeOut, ref IntPtr ppSync);
        WaitMultipleFunc m_WaitMultipleFunc;

    }
}
