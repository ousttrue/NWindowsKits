// This source code was generated by ClangCaster
using System;
using System.Runtime.InteropServices;

namespace NWindowsKits
{
    // C:/Program Files (x86)/Windows Kits/10/Include/10.0.18362.0/um/objidlbase.h:2970
    public class IRpcChannelBuffer3 : IRpcChannelBuffer2 // 1
    {
        static Guid s_uuid = new Guid("25b15600-0115-11d0-bf0d-00aa00b8dfd2");
        public static new ref Guid IID => ref s_uuid;
        public override ref Guid GetIID() { return ref s_uuid; }

        public int Send(ref RPCOLEMESSAGE pMsg, IntPtr pulStatus)
        {
            if(m_SendFunc==null){
                var fp = GetFunctionPointer(9);
                m_SendFunc = (SendFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SendFunc));
            } 
            
            return  m_SendFunc(m_ptr, ref pMsg, pulStatus);
        }
        delegate int SendFunc(IntPtr self, ref RPCOLEMESSAGE pMsg, IntPtr pulStatus);
        SendFunc m_SendFunc;

        public int Receive(ref RPCOLEMESSAGE pMsg, uint ulSize, IntPtr pulStatus)
        {
            if(m_ReceiveFunc==null){
                var fp = GetFunctionPointer(10);
                m_ReceiveFunc = (ReceiveFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(ReceiveFunc));
            } 
            
            return  m_ReceiveFunc(m_ptr, ref pMsg, ulSize, pulStatus);
        }
        delegate int ReceiveFunc(IntPtr self, ref RPCOLEMESSAGE pMsg, uint ulSize, IntPtr pulStatus);
        ReceiveFunc m_ReceiveFunc;

        public int Cancel(ref RPCOLEMESSAGE pMsg)
        {
            if(m_CancelFunc==null){
                var fp = GetFunctionPointer(11);
                m_CancelFunc = (CancelFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CancelFunc));
            } 
            
            return  m_CancelFunc(m_ptr, ref pMsg);
        }
        delegate int CancelFunc(IntPtr self, ref RPCOLEMESSAGE pMsg);
        CancelFunc m_CancelFunc;

        public int GetCallContext(ref RPCOLEMESSAGE pMsg, ref Guid riid, ref IntPtr pInterface)
        {
            if(m_GetCallContextFunc==null){
                var fp = GetFunctionPointer(12);
                m_GetCallContextFunc = (GetCallContextFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetCallContextFunc));
            } 
            
            return  m_GetCallContextFunc(m_ptr, ref pMsg, ref riid, ref pInterface);
        }
        delegate int GetCallContextFunc(IntPtr self, ref RPCOLEMESSAGE pMsg, ref Guid riid, ref IntPtr pInterface);
        GetCallContextFunc m_GetCallContextFunc;

        public int GetDestCtxEx(ref RPCOLEMESSAGE pMsg, ref uint pdwDestContext, ref IntPtr ppvDestContext)
        {
            if(m_GetDestCtxExFunc==null){
                var fp = GetFunctionPointer(13);
                m_GetDestCtxExFunc = (GetDestCtxExFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetDestCtxExFunc));
            } 
            
            return  m_GetDestCtxExFunc(m_ptr, ref pMsg, ref pdwDestContext, ref ppvDestContext);
        }
        delegate int GetDestCtxExFunc(IntPtr self, ref RPCOLEMESSAGE pMsg, ref uint pdwDestContext, ref IntPtr ppvDestContext);
        GetDestCtxExFunc m_GetDestCtxExFunc;

        public int GetState(ref RPCOLEMESSAGE pMsg, ref uint pState)
        {
            if(m_GetStateFunc==null){
                var fp = GetFunctionPointer(14);
                m_GetStateFunc = (GetStateFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetStateFunc));
            } 
            
            return  m_GetStateFunc(m_ptr, ref pMsg, ref pState);
        }
        delegate int GetStateFunc(IntPtr self, ref RPCOLEMESSAGE pMsg, ref uint pState);
        GetStateFunc m_GetStateFunc;

        public int RegisterAsync(ref RPCOLEMESSAGE pMsg, IntPtr pAsyncMgr)
        {
            if(m_RegisterAsyncFunc==null){
                var fp = GetFunctionPointer(15);
                m_RegisterAsyncFunc = (RegisterAsyncFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(RegisterAsyncFunc));
            } 
            
            return  m_RegisterAsyncFunc(m_ptr, ref pMsg, pAsyncMgr);
        }
        delegate int RegisterAsyncFunc(IntPtr self, ref RPCOLEMESSAGE pMsg, IntPtr pAsyncMgr);
        RegisterAsyncFunc m_RegisterAsyncFunc;

    }
}
