// This source code was generated by ClangCaster
using System;
using System.Runtime.InteropServices;

namespace NWindowsKits
{
    // C:/Program Files (x86)/Windows Kits/10/Include/10.0.18362.0/um/objidlbase.h:533
    public class IMarshal : IUnknown // 1
    {
        static Guid s_uuid = new Guid("00000003-0000-0000-c000-000000000046");
        public static new ref Guid IID => ref s_uuid;
        public override ref Guid GetIID() { return ref s_uuid; }

        public int GetUnmarshalClass(ref Guid riid, IntPtr pv, uint dwDestContext, IntPtr pvDestContext, uint mshlflags, IntPtr pCid)
        {
            if(m_GetUnmarshalClassFunc==null){
                var fp = GetFunctionPointer(3);
                m_GetUnmarshalClassFunc = (GetUnmarshalClassFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetUnmarshalClassFunc));
            } 
            return  m_GetUnmarshalClassFunc(m_ptr, ref riid, pv, dwDestContext, pvDestContext, mshlflags, pCid);
        }
        delegate int GetUnmarshalClassFunc(IntPtr self, ref Guid riid, IntPtr pv, uint dwDestContext, IntPtr pvDestContext, uint mshlflags, IntPtr pCid);
        GetUnmarshalClassFunc m_GetUnmarshalClassFunc;

        public int GetMarshalSizeMax(ref Guid riid, IntPtr pv, uint dwDestContext, IntPtr pvDestContext, uint mshlflags, ref uint pSize)
        {
            if(m_GetMarshalSizeMaxFunc==null){
                var fp = GetFunctionPointer(4);
                m_GetMarshalSizeMaxFunc = (GetMarshalSizeMaxFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetMarshalSizeMaxFunc));
            } 
            return  m_GetMarshalSizeMaxFunc(m_ptr, ref riid, pv, dwDestContext, pvDestContext, mshlflags, ref pSize);
        }
        delegate int GetMarshalSizeMaxFunc(IntPtr self, ref Guid riid, IntPtr pv, uint dwDestContext, IntPtr pvDestContext, uint mshlflags, ref uint pSize);
        GetMarshalSizeMaxFunc m_GetMarshalSizeMaxFunc;

        public int MarshalInterface(IntPtr pStm, ref Guid riid, IntPtr pv, uint dwDestContext, IntPtr pvDestContext, uint mshlflags)
        {
            if(m_MarshalInterfaceFunc==null){
                var fp = GetFunctionPointer(5);
                m_MarshalInterfaceFunc = (MarshalInterfaceFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(MarshalInterfaceFunc));
            } 
            return  m_MarshalInterfaceFunc(m_ptr, pStm, ref riid, pv, dwDestContext, pvDestContext, mshlflags);
        }
        delegate int MarshalInterfaceFunc(IntPtr self, IntPtr pStm, ref Guid riid, IntPtr pv, uint dwDestContext, IntPtr pvDestContext, uint mshlflags);
        MarshalInterfaceFunc m_MarshalInterfaceFunc;

        public int UnmarshalInterface(IntPtr pStm, ref Guid riid, ref IntPtr ppv)
        {
            if(m_UnmarshalInterfaceFunc==null){
                var fp = GetFunctionPointer(6);
                m_UnmarshalInterfaceFunc = (UnmarshalInterfaceFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(UnmarshalInterfaceFunc));
            } 
            return  m_UnmarshalInterfaceFunc(m_ptr, pStm, ref riid, ref ppv);
        }
        delegate int UnmarshalInterfaceFunc(IntPtr self, IntPtr pStm, ref Guid riid, ref IntPtr ppv);
        UnmarshalInterfaceFunc m_UnmarshalInterfaceFunc;

        public int ReleaseMarshalData(IntPtr pStm)
        {
            if(m_ReleaseMarshalDataFunc==null){
                var fp = GetFunctionPointer(7);
                m_ReleaseMarshalDataFunc = (ReleaseMarshalDataFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(ReleaseMarshalDataFunc));
            } 
            return  m_ReleaseMarshalDataFunc(m_ptr, pStm);
        }
        delegate int ReleaseMarshalDataFunc(IntPtr self, IntPtr pStm);
        ReleaseMarshalDataFunc m_ReleaseMarshalDataFunc;

        public int DisconnectObject(uint dwReserved)
        {
            if(m_DisconnectObjectFunc==null){
                var fp = GetFunctionPointer(8);
                m_DisconnectObjectFunc = (DisconnectObjectFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(DisconnectObjectFunc));
            } 
            return  m_DisconnectObjectFunc(m_ptr, dwReserved);
        }
        delegate int DisconnectObjectFunc(IntPtr self, uint dwReserved);
        DisconnectObjectFunc m_DisconnectObjectFunc;

    }
}
