// This source code was generated by ClangCaster
using System;
using System.Runtime.InteropServices;

namespace NWindowsKits
{
    // C:/Program Files (x86)/Windows Kits/10/Include/10.0.18362.0/um/objidlbase.h:4830
    public class ISynchronize : IUnknown
    {
        static Guid s_uuid = new Guid("00000030-0000-0000-c000-000000000046");
        public static new ref Guid IID => ref s_uuid;
        public override ref Guid GetIID() { return ref s_uuid; }

        public int Wait(uint dwFlags, uint dwMilliseconds)
        {
            if(m_WaitFunc==null){
                var fp = GetFunctionPointer(3);
                m_WaitFunc = (WaitFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(WaitFunc));
            } 
            return  m_WaitFunc(m_ptr, dwFlags, dwMilliseconds);
        }
        delegate int WaitFunc(IntPtr self, uint dwFlags, uint dwMilliseconds);
        WaitFunc m_WaitFunc;

        public int Signal()
        {
            if(m_SignalFunc==null){
                var fp = GetFunctionPointer(4);
                m_SignalFunc = (SignalFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SignalFunc));
            } 
            return  m_SignalFunc(m_ptr);
        }
        delegate int SignalFunc(IntPtr self);
        SignalFunc m_SignalFunc;

        public int Reset()
        {
            if(m_ResetFunc==null){
                var fp = GetFunctionPointer(5);
                m_ResetFunc = (ResetFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(ResetFunc));
            } 
            return  m_ResetFunc(m_ptr);
        }
        delegate int ResetFunc(IntPtr self);
        ResetFunc m_ResetFunc;

    }
}
