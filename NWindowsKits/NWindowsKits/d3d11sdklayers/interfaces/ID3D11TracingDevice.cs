// This source code was generated by ClangCaster
using System;
using System.Runtime.InteropServices;

namespace NWindowsKits
{
    // C:/Program Files (x86)/Windows Kits/10/Include/10.0.18362.0/um/d3d11sdklayers.h:458
    public class ID3D11TracingDevice : IUnknown
    {
        static Guid s_uuid = new Guid("1911c771-1587-413e-a7e0-fb26c3de0268");
        public static new ref Guid IID => ref s_uuid;
        public override ref Guid GetIID() { return ref s_uuid; }

        public int SetShaderTrackingOptionsByType(uint ResourceTypeFlags, uint Options)
        {
            if(m_SetShaderTrackingOptionsByTypeFunc==null){
                var fp = GetFunctionPointer(3);
                m_SetShaderTrackingOptionsByTypeFunc = (SetShaderTrackingOptionsByTypeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetShaderTrackingOptionsByTypeFunc));
            } 
            return  m_SetShaderTrackingOptionsByTypeFunc(m_ptr, ResourceTypeFlags, Options);
        }
        delegate int SetShaderTrackingOptionsByTypeFunc(IntPtr self, uint ResourceTypeFlags, uint Options);
        SetShaderTrackingOptionsByTypeFunc m_SetShaderTrackingOptionsByTypeFunc;

        public int SetShaderTrackingOptions(IntPtr pShader, uint Options)
        {
            if(m_SetShaderTrackingOptionsFunc==null){
                var fp = GetFunctionPointer(4);
                m_SetShaderTrackingOptionsFunc = (SetShaderTrackingOptionsFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetShaderTrackingOptionsFunc));
            } 
            return  m_SetShaderTrackingOptionsFunc(m_ptr, pShader, Options);
        }
        delegate int SetShaderTrackingOptionsFunc(IntPtr self, IntPtr pShader, uint Options);
        SetShaderTrackingOptionsFunc m_SetShaderTrackingOptionsFunc;

    }
}
