// This source code was generated by ClangCaster
using System;
using System.Runtime.InteropServices;

namespace NWindowsKits
{
    // C:/Program Files (x86)/Windows Kits/10/Include/10.0.18362.0/um/unknwnbase.h:437
    public class IClassFactory : IUnknown // 1
    {
        static Guid s_uuid = new Guid("00000001-0000-0000-c000-000000000046");
        public static new ref Guid IID => ref s_uuid;
        public override ref Guid GetIID() { return ref s_uuid; }

        public int CreateInstance(IntPtr pUnkOuter, ref Guid riid, ref IntPtr ppvObject)
        {
            if(m_CreateInstanceFunc==null){
                var fp = GetFunctionPointer(3);
                m_CreateInstanceFunc = (CreateInstanceFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateInstanceFunc));
            } 
            
            return  m_CreateInstanceFunc(m_ptr, pUnkOuter, ref riid, ref ppvObject);
        }
        delegate int CreateInstanceFunc(IntPtr self, IntPtr pUnkOuter, ref Guid riid, ref IntPtr ppvObject);
        CreateInstanceFunc m_CreateInstanceFunc;

        public int LockServer(int fLock)
        {
            if(m_LockServerFunc==null){
                var fp = GetFunctionPointer(4);
                m_LockServerFunc = (LockServerFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(LockServerFunc));
            } 
            
            return  m_LockServerFunc(m_ptr, fLock);
        }
        delegate int LockServerFunc(IntPtr self, int fLock);
        LockServerFunc m_LockServerFunc;

    }
}
