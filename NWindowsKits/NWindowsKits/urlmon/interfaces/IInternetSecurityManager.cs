// This source code was generated by ClangCaster
using System;
using System.Runtime.InteropServices;

namespace NWindowsKits
{
    // C:/Program Files (x86)/Windows Kits/10/Include/10.0.18362.0/um/urlmon.h:7098
    public class IInternetSecurityManager : IUnknown
    {
        static Guid s_uuid = new Guid("79eac9ee-baf9-11ce-8c82-00aa004ba90b");
        public static new ref Guid IID => ref s_uuid;
        public override ref Guid GetIID() { return ref s_uuid; }

        public int SetSecuritySite(IntPtr pSite)
        {
            if(m_SetSecuritySiteFunc==null){
                var fp = GetFunctionPointer(3);
                m_SetSecuritySiteFunc = (SetSecuritySiteFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetSecuritySiteFunc));
            } 
            return  m_SetSecuritySiteFunc(m_ptr, pSite);
        }
        delegate int SetSecuritySiteFunc(IntPtr self, IntPtr pSite);
        SetSecuritySiteFunc m_SetSecuritySiteFunc;

        public int GetSecuritySite(ref IntPtr ppSite)
        {
            if(m_GetSecuritySiteFunc==null){
                var fp = GetFunctionPointer(4);
                m_GetSecuritySiteFunc = (GetSecuritySiteFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetSecuritySiteFunc));
            } 
            return  m_GetSecuritySiteFunc(m_ptr, ref ppSite);
        }
        delegate int GetSecuritySiteFunc(IntPtr self, ref IntPtr ppSite);
        GetSecuritySiteFunc m_GetSecuritySiteFunc;

        public int MapUrlToZone([MarshalAs(UnmanagedType.LPWStr)] string pwszUrl, ref uint pdwZone, uint dwFlags)
        {
            if(m_MapUrlToZoneFunc==null){
                var fp = GetFunctionPointer(5);
                m_MapUrlToZoneFunc = (MapUrlToZoneFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(MapUrlToZoneFunc));
            } 
            return  m_MapUrlToZoneFunc(m_ptr, pwszUrl, ref pdwZone, dwFlags);
        }
        delegate int MapUrlToZoneFunc(IntPtr self, [MarshalAs(UnmanagedType.LPWStr)] string pwszUrl, ref uint pdwZone, uint dwFlags);
        MapUrlToZoneFunc m_MapUrlToZoneFunc;

        public int GetSecurityId([MarshalAs(UnmanagedType.LPWStr)] string pwszUrl, ref byte pbSecurityId, ref uint pcbSecurityId, ulong dwReserved)
        {
            if(m_GetSecurityIdFunc==null){
                var fp = GetFunctionPointer(6);
                m_GetSecurityIdFunc = (GetSecurityIdFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetSecurityIdFunc));
            } 
            return  m_GetSecurityIdFunc(m_ptr, pwszUrl, ref pbSecurityId, ref pcbSecurityId, dwReserved);
        }
        delegate int GetSecurityIdFunc(IntPtr self, [MarshalAs(UnmanagedType.LPWStr)] string pwszUrl, ref byte pbSecurityId, ref uint pcbSecurityId, ulong dwReserved);
        GetSecurityIdFunc m_GetSecurityIdFunc;

        public int ProcessUrlAction([MarshalAs(UnmanagedType.LPWStr)] string pwszUrl, uint dwAction, ref byte pPolicy, uint cbPolicy, ref byte pContext, uint cbContext, uint dwFlags, uint dwReserved)
        {
            if(m_ProcessUrlActionFunc==null){
                var fp = GetFunctionPointer(7);
                m_ProcessUrlActionFunc = (ProcessUrlActionFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(ProcessUrlActionFunc));
            } 
            return  m_ProcessUrlActionFunc(m_ptr, pwszUrl, dwAction, ref pPolicy, cbPolicy, ref pContext, cbContext, dwFlags, dwReserved);
        }
        delegate int ProcessUrlActionFunc(IntPtr self, [MarshalAs(UnmanagedType.LPWStr)] string pwszUrl, uint dwAction, ref byte pPolicy, uint cbPolicy, ref byte pContext, uint cbContext, uint dwFlags, uint dwReserved);
        ProcessUrlActionFunc m_ProcessUrlActionFunc;

        public int QueryCustomPolicy([MarshalAs(UnmanagedType.LPWStr)] string pwszUrl, ref GUID guidKey, ref IntPtr ppPolicy, ref uint pcbPolicy, ref byte pContext, uint cbContext, uint dwReserved)
        {
            if(m_QueryCustomPolicyFunc==null){
                var fp = GetFunctionPointer(8);
                m_QueryCustomPolicyFunc = (QueryCustomPolicyFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(QueryCustomPolicyFunc));
            } 
            return  m_QueryCustomPolicyFunc(m_ptr, pwszUrl, ref guidKey, ref ppPolicy, ref pcbPolicy, ref pContext, cbContext, dwReserved);
        }
        delegate int QueryCustomPolicyFunc(IntPtr self, [MarshalAs(UnmanagedType.LPWStr)] string pwszUrl, ref GUID guidKey, ref IntPtr ppPolicy, ref uint pcbPolicy, ref byte pContext, uint cbContext, uint dwReserved);
        QueryCustomPolicyFunc m_QueryCustomPolicyFunc;

        public int SetZoneMapping(uint dwZone, [MarshalAs(UnmanagedType.LPWStr)] string lpszPattern, uint dwFlags)
        {
            if(m_SetZoneMappingFunc==null){
                var fp = GetFunctionPointer(9);
                m_SetZoneMappingFunc = (SetZoneMappingFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetZoneMappingFunc));
            } 
            return  m_SetZoneMappingFunc(m_ptr, dwZone, lpszPattern, dwFlags);
        }
        delegate int SetZoneMappingFunc(IntPtr self, uint dwZone, [MarshalAs(UnmanagedType.LPWStr)] string lpszPattern, uint dwFlags);
        SetZoneMappingFunc m_SetZoneMappingFunc;

        public int GetZoneMappings(uint dwZone, ref IntPtr ppenumString, uint dwFlags)
        {
            if(m_GetZoneMappingsFunc==null){
                var fp = GetFunctionPointer(10);
                m_GetZoneMappingsFunc = (GetZoneMappingsFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetZoneMappingsFunc));
            } 
            return  m_GetZoneMappingsFunc(m_ptr, dwZone, ref ppenumString, dwFlags);
        }
        delegate int GetZoneMappingsFunc(IntPtr self, uint dwZone, ref IntPtr ppenumString, uint dwFlags);
        GetZoneMappingsFunc m_GetZoneMappingsFunc;

    }
}
