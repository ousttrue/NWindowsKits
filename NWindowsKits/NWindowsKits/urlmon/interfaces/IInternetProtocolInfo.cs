// This source code was generated by ClangCaster
using System;
using System.Runtime.InteropServices;

namespace NWindowsKits
{
    // C:/Program Files (x86)/Windows Kits/10/Include/10.0.18362.0/um/urlmon.h:6457
    public class IInternetProtocolInfo : IUnknown // 1
    {
        static Guid s_uuid = new Guid("79eac9ec-baf9-11ce-8c82-00aa004ba90b");
        public static new ref Guid IID => ref s_uuid;
        public override ref Guid GetIID() { return ref s_uuid; }

        public int ParseUrl([MarshalAs(UnmanagedType.LPWStr)] string pwzUrl, PARSEACTION ParseAction, uint dwParseFlags, ref ushort pwzResult, uint cchResult, ref uint pcchResult, uint dwReserved)
        {
            if(m_ParseUrlFunc==null){
                var fp = GetFunctionPointer(3);
                m_ParseUrlFunc = (ParseUrlFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(ParseUrlFunc));
            } 
            return  m_ParseUrlFunc(m_ptr, pwzUrl, ParseAction, dwParseFlags, ref pwzResult, cchResult, ref pcchResult, dwReserved);
        }
        delegate int ParseUrlFunc(IntPtr self, [MarshalAs(UnmanagedType.LPWStr)] string pwzUrl, PARSEACTION ParseAction, uint dwParseFlags, ref ushort pwzResult, uint cchResult, ref uint pcchResult, uint dwReserved);
        ParseUrlFunc m_ParseUrlFunc;

        public int CombineUrl([MarshalAs(UnmanagedType.LPWStr)] string pwzBaseUrl, [MarshalAs(UnmanagedType.LPWStr)] string pwzRelativeUrl, uint dwCombineFlags, ref ushort pwzResult, uint cchResult, ref uint pcchResult, uint dwReserved)
        {
            if(m_CombineUrlFunc==null){
                var fp = GetFunctionPointer(4);
                m_CombineUrlFunc = (CombineUrlFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CombineUrlFunc));
            } 
            return  m_CombineUrlFunc(m_ptr, pwzBaseUrl, pwzRelativeUrl, dwCombineFlags, ref pwzResult, cchResult, ref pcchResult, dwReserved);
        }
        delegate int CombineUrlFunc(IntPtr self, [MarshalAs(UnmanagedType.LPWStr)] string pwzBaseUrl, [MarshalAs(UnmanagedType.LPWStr)] string pwzRelativeUrl, uint dwCombineFlags, ref ushort pwzResult, uint cchResult, ref uint pcchResult, uint dwReserved);
        CombineUrlFunc m_CombineUrlFunc;

        public int CompareUrl([MarshalAs(UnmanagedType.LPWStr)] string pwzUrl1, [MarshalAs(UnmanagedType.LPWStr)] string pwzUrl2, uint dwCompareFlags)
        {
            if(m_CompareUrlFunc==null){
                var fp = GetFunctionPointer(5);
                m_CompareUrlFunc = (CompareUrlFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CompareUrlFunc));
            } 
            return  m_CompareUrlFunc(m_ptr, pwzUrl1, pwzUrl2, dwCompareFlags);
        }
        delegate int CompareUrlFunc(IntPtr self, [MarshalAs(UnmanagedType.LPWStr)] string pwzUrl1, [MarshalAs(UnmanagedType.LPWStr)] string pwzUrl2, uint dwCompareFlags);
        CompareUrlFunc m_CompareUrlFunc;

        public int QueryInfo([MarshalAs(UnmanagedType.LPWStr)] string pwzUrl, QUERYOPTION OueryOption, uint dwQueryFlags, IntPtr pBuffer, uint cbBuffer, ref uint pcbBuf, uint dwReserved)
        {
            if(m_QueryInfoFunc==null){
                var fp = GetFunctionPointer(6);
                m_QueryInfoFunc = (QueryInfoFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(QueryInfoFunc));
            } 
            return  m_QueryInfoFunc(m_ptr, pwzUrl, OueryOption, dwQueryFlags, pBuffer, cbBuffer, ref pcbBuf, dwReserved);
        }
        delegate int QueryInfoFunc(IntPtr self, [MarshalAs(UnmanagedType.LPWStr)] string pwzUrl, QUERYOPTION OueryOption, uint dwQueryFlags, IntPtr pBuffer, uint cbBuffer, ref uint pcbBuf, uint dwReserved);
        QueryInfoFunc m_QueryInfoFunc;

    }
}
