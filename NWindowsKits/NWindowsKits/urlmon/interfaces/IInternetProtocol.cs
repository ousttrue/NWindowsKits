// This source code was generated by ClangCaster
using System;
using System.Runtime.InteropServices;

namespace NWindowsKits
{
    // C:/Program Files (x86)/Windows Kits/10/Include/10.0.18362.0/um/urlmon.h:5407
    public class IInternetProtocol : IInternetProtocolRoot
    {
        static Guid s_uuid = new Guid("79eac9e4-baf9-11ce-8c82-00aa004ba90b");
        public static new ref Guid IID => ref s_uuid;
        public override ref Guid GetIID() { return ref s_uuid; }

        public int Read(IntPtr pv, uint cb, IntPtr pcbRead)
        {
            if(m_ReadFunc==null){
                var fp = GetFunctionPointer(9);
                m_ReadFunc = (ReadFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(ReadFunc));
            } 
            return  m_ReadFunc(m_ptr, pv, cb, pcbRead);
        }
        delegate int ReadFunc(IntPtr self, IntPtr pv, uint cb, IntPtr pcbRead);
        ReadFunc m_ReadFunc;

        public int Seek(LARGE_INTEGER dlibMove, uint dwOrigin, ref ULARGE_INTEGER plibNewPosition)
        {
            if(m_SeekFunc==null){
                var fp = GetFunctionPointer(10);
                m_SeekFunc = (SeekFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SeekFunc));
            } 
            return  m_SeekFunc(m_ptr, dlibMove, dwOrigin, ref plibNewPosition);
        }
        delegate int SeekFunc(IntPtr self, LARGE_INTEGER dlibMove, uint dwOrigin, ref ULARGE_INTEGER plibNewPosition);
        SeekFunc m_SeekFunc;

        public int LockRequest(uint dwOptions)
        {
            if(m_LockRequestFunc==null){
                var fp = GetFunctionPointer(11);
                m_LockRequestFunc = (LockRequestFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(LockRequestFunc));
            } 
            return  m_LockRequestFunc(m_ptr, dwOptions);
        }
        delegate int LockRequestFunc(IntPtr self, uint dwOptions);
        LockRequestFunc m_LockRequestFunc;

        public int UnlockRequest()
        {
            if(m_UnlockRequestFunc==null){
                var fp = GetFunctionPointer(12);
                m_UnlockRequestFunc = (UnlockRequestFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(UnlockRequestFunc));
            } 
            return  m_UnlockRequestFunc(m_ptr);
        }
        delegate int UnlockRequestFunc(IntPtr self);
        UnlockRequestFunc m_UnlockRequestFunc;

    }
}
