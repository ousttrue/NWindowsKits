// This source code was generated by ClangCaster
using System;
using System.Runtime.InteropServices;

namespace NWindowsKits
{
    // C:/Program Files (x86)/Windows Kits/10/Include/10.0.18362.0/um/urlmon.h:6010
    public class IInternetSession : IUnknown // 1
    {
        static Guid s_uuid = new Guid("79eac9e7-baf9-11ce-8c82-00aa004ba90b");
        public static new ref Guid IID => ref s_uuid;
        public override ref Guid GetIID() { return ref s_uuid; }

        public int RegisterNameSpace(IntPtr pCF, ref Guid rclsid, [MarshalAs(UnmanagedType.LPWStr)] string pwzProtocol, uint cPatterns, ref IntPtr ppwzPatterns, uint dwReserved)
        {
            if(m_RegisterNameSpaceFunc==null){
                var fp = GetFunctionPointer(3);
                m_RegisterNameSpaceFunc = (RegisterNameSpaceFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(RegisterNameSpaceFunc));
            } 
            return  m_RegisterNameSpaceFunc(m_ptr, pCF, ref rclsid, pwzProtocol, cPatterns, ref ppwzPatterns, dwReserved);
        }
        delegate int RegisterNameSpaceFunc(IntPtr self, IntPtr pCF, ref Guid rclsid, [MarshalAs(UnmanagedType.LPWStr)] string pwzProtocol, uint cPatterns, ref IntPtr ppwzPatterns, uint dwReserved);
        RegisterNameSpaceFunc m_RegisterNameSpaceFunc;

        public int UnregisterNameSpace(IntPtr pCF, [MarshalAs(UnmanagedType.LPWStr)] string pszProtocol)
        {
            if(m_UnregisterNameSpaceFunc==null){
                var fp = GetFunctionPointer(4);
                m_UnregisterNameSpaceFunc = (UnregisterNameSpaceFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(UnregisterNameSpaceFunc));
            } 
            return  m_UnregisterNameSpaceFunc(m_ptr, pCF, pszProtocol);
        }
        delegate int UnregisterNameSpaceFunc(IntPtr self, IntPtr pCF, [MarshalAs(UnmanagedType.LPWStr)] string pszProtocol);
        UnregisterNameSpaceFunc m_UnregisterNameSpaceFunc;

        public int RegisterMimeFilter(IntPtr pCF, ref Guid rclsid, [MarshalAs(UnmanagedType.LPWStr)] string pwzType)
        {
            if(m_RegisterMimeFilterFunc==null){
                var fp = GetFunctionPointer(5);
                m_RegisterMimeFilterFunc = (RegisterMimeFilterFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(RegisterMimeFilterFunc));
            } 
            return  m_RegisterMimeFilterFunc(m_ptr, pCF, ref rclsid, pwzType);
        }
        delegate int RegisterMimeFilterFunc(IntPtr self, IntPtr pCF, ref Guid rclsid, [MarshalAs(UnmanagedType.LPWStr)] string pwzType);
        RegisterMimeFilterFunc m_RegisterMimeFilterFunc;

        public int UnregisterMimeFilter(IntPtr pCF, [MarshalAs(UnmanagedType.LPWStr)] string pwzType)
        {
            if(m_UnregisterMimeFilterFunc==null){
                var fp = GetFunctionPointer(6);
                m_UnregisterMimeFilterFunc = (UnregisterMimeFilterFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(UnregisterMimeFilterFunc));
            } 
            return  m_UnregisterMimeFilterFunc(m_ptr, pCF, pwzType);
        }
        delegate int UnregisterMimeFilterFunc(IntPtr self, IntPtr pCF, [MarshalAs(UnmanagedType.LPWStr)] string pwzType);
        UnregisterMimeFilterFunc m_UnregisterMimeFilterFunc;

        public int CreateBinding(IntPtr pBC, [MarshalAs(UnmanagedType.LPWStr)] string szUrl, IntPtr pUnkOuter, ref IntPtr ppUnk, ref IntPtr ppOInetProt, uint dwOption)
        {
            if(m_CreateBindingFunc==null){
                var fp = GetFunctionPointer(7);
                m_CreateBindingFunc = (CreateBindingFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateBindingFunc));
            } 
            return  m_CreateBindingFunc(m_ptr, pBC, szUrl, pUnkOuter, ref ppUnk, ref ppOInetProt, dwOption);
        }
        delegate int CreateBindingFunc(IntPtr self, IntPtr pBC, [MarshalAs(UnmanagedType.LPWStr)] string szUrl, IntPtr pUnkOuter, ref IntPtr ppUnk, ref IntPtr ppOInetProt, uint dwOption);
        CreateBindingFunc m_CreateBindingFunc;

        public int SetSessionOption(uint dwOption, IntPtr pBuffer, uint dwBufferLength, uint dwReserved)
        {
            if(m_SetSessionOptionFunc==null){
                var fp = GetFunctionPointer(8);
                m_SetSessionOptionFunc = (SetSessionOptionFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetSessionOptionFunc));
            } 
            return  m_SetSessionOptionFunc(m_ptr, dwOption, pBuffer, dwBufferLength, dwReserved);
        }
        delegate int SetSessionOptionFunc(IntPtr self, uint dwOption, IntPtr pBuffer, uint dwBufferLength, uint dwReserved);
        SetSessionOptionFunc m_SetSessionOptionFunc;

        public int GetSessionOption(uint dwOption, IntPtr pBuffer, ref uint pdwBufferLength, uint dwReserved)
        {
            if(m_GetSessionOptionFunc==null){
                var fp = GetFunctionPointer(9);
                m_GetSessionOptionFunc = (GetSessionOptionFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetSessionOptionFunc));
            } 
            return  m_GetSessionOptionFunc(m_ptr, dwOption, pBuffer, ref pdwBufferLength, dwReserved);
        }
        delegate int GetSessionOptionFunc(IntPtr self, uint dwOption, IntPtr pBuffer, ref uint pdwBufferLength, uint dwReserved);
        GetSessionOptionFunc m_GetSessionOptionFunc;

    }
}
