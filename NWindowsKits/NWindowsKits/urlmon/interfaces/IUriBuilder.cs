// This source code was generated by ClangCaster
using System;
using System.Runtime.InteropServices;

namespace NWindowsKits
{
    // C:/Program Files (x86)/Windows Kits/10/Include/10.0.18362.0/um/urlmon.h:3445
    public class IUriBuilder : IUnknown
    {
        static Guid s_uuid = new Guid("4221b2e1-8955-46c0-bd5b-de9897565de7");
        public static new ref Guid IID => ref s_uuid;
        public override ref Guid GetIID() { return ref s_uuid; }

        public int CreateUriSimple(uint dwAllowEncodingPropertyMask, ulong dwReserved, ref IntPtr ppIUri)
        {
            if(m_CreateUriSimpleFunc==null){
                var fp = GetFunctionPointer(3);
                m_CreateUriSimpleFunc = (CreateUriSimpleFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateUriSimpleFunc));
            } 
            return  m_CreateUriSimpleFunc(m_ptr, dwAllowEncodingPropertyMask, dwReserved, ref ppIUri);
        }
        delegate int CreateUriSimpleFunc(IntPtr self, uint dwAllowEncodingPropertyMask, ulong dwReserved, ref IntPtr ppIUri);
        CreateUriSimpleFunc m_CreateUriSimpleFunc;

        public int CreateUri(uint dwCreateFlags, uint dwAllowEncodingPropertyMask, ulong dwReserved, ref IntPtr ppIUri)
        {
            if(m_CreateUriFunc==null){
                var fp = GetFunctionPointer(4);
                m_CreateUriFunc = (CreateUriFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateUriFunc));
            } 
            return  m_CreateUriFunc(m_ptr, dwCreateFlags, dwAllowEncodingPropertyMask, dwReserved, ref ppIUri);
        }
        delegate int CreateUriFunc(IntPtr self, uint dwCreateFlags, uint dwAllowEncodingPropertyMask, ulong dwReserved, ref IntPtr ppIUri);
        CreateUriFunc m_CreateUriFunc;

        public int CreateUriWithFlags(uint dwCreateFlags, uint dwUriBuilderFlags, uint dwAllowEncodingPropertyMask, ulong dwReserved, ref IntPtr ppIUri)
        {
            if(m_CreateUriWithFlagsFunc==null){
                var fp = GetFunctionPointer(5);
                m_CreateUriWithFlagsFunc = (CreateUriWithFlagsFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateUriWithFlagsFunc));
            } 
            return  m_CreateUriWithFlagsFunc(m_ptr, dwCreateFlags, dwUriBuilderFlags, dwAllowEncodingPropertyMask, dwReserved, ref ppIUri);
        }
        delegate int CreateUriWithFlagsFunc(IntPtr self, uint dwCreateFlags, uint dwUriBuilderFlags, uint dwAllowEncodingPropertyMask, ulong dwReserved, ref IntPtr ppIUri);
        CreateUriWithFlagsFunc m_CreateUriWithFlagsFunc;

        public int GetIUri(ref IntPtr ppIUri)
        {
            if(m_GetIUriFunc==null){
                var fp = GetFunctionPointer(6);
                m_GetIUriFunc = (GetIUriFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetIUriFunc));
            } 
            return  m_GetIUriFunc(m_ptr, ref ppIUri);
        }
        delegate int GetIUriFunc(IntPtr self, ref IntPtr ppIUri);
        GetIUriFunc m_GetIUriFunc;

        public int SetIUri(IntPtr pIUri)
        {
            if(m_SetIUriFunc==null){
                var fp = GetFunctionPointer(7);
                m_SetIUriFunc = (SetIUriFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetIUriFunc));
            } 
            return  m_SetIUriFunc(m_ptr, pIUri);
        }
        delegate int SetIUriFunc(IntPtr self, IntPtr pIUri);
        SetIUriFunc m_SetIUriFunc;

        public int GetFragment(ref uint pcchFragment, ref IntPtr ppwzFragment)
        {
            if(m_GetFragmentFunc==null){
                var fp = GetFunctionPointer(8);
                m_GetFragmentFunc = (GetFragmentFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetFragmentFunc));
            } 
            return  m_GetFragmentFunc(m_ptr, ref pcchFragment, ref ppwzFragment);
        }
        delegate int GetFragmentFunc(IntPtr self, ref uint pcchFragment, ref IntPtr ppwzFragment);
        GetFragmentFunc m_GetFragmentFunc;

        public int GetHost(ref uint pcchHost, ref IntPtr ppwzHost)
        {
            if(m_GetHostFunc==null){
                var fp = GetFunctionPointer(9);
                m_GetHostFunc = (GetHostFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetHostFunc));
            } 
            return  m_GetHostFunc(m_ptr, ref pcchHost, ref ppwzHost);
        }
        delegate int GetHostFunc(IntPtr self, ref uint pcchHost, ref IntPtr ppwzHost);
        GetHostFunc m_GetHostFunc;

        public int GetPassword(ref uint pcchPassword, ref IntPtr ppwzPassword)
        {
            if(m_GetPasswordFunc==null){
                var fp = GetFunctionPointer(10);
                m_GetPasswordFunc = (GetPasswordFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetPasswordFunc));
            } 
            return  m_GetPasswordFunc(m_ptr, ref pcchPassword, ref ppwzPassword);
        }
        delegate int GetPasswordFunc(IntPtr self, ref uint pcchPassword, ref IntPtr ppwzPassword);
        GetPasswordFunc m_GetPasswordFunc;

        public int GetPath(ref uint pcchPath, ref IntPtr ppwzPath)
        {
            if(m_GetPathFunc==null){
                var fp = GetFunctionPointer(11);
                m_GetPathFunc = (GetPathFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetPathFunc));
            } 
            return  m_GetPathFunc(m_ptr, ref pcchPath, ref ppwzPath);
        }
        delegate int GetPathFunc(IntPtr self, ref uint pcchPath, ref IntPtr ppwzPath);
        GetPathFunc m_GetPathFunc;

        public int GetPort(ref int pfHasPort, ref uint pdwPort)
        {
            if(m_GetPortFunc==null){
                var fp = GetFunctionPointer(12);
                m_GetPortFunc = (GetPortFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetPortFunc));
            } 
            return  m_GetPortFunc(m_ptr, ref pfHasPort, ref pdwPort);
        }
        delegate int GetPortFunc(IntPtr self, ref int pfHasPort, ref uint pdwPort);
        GetPortFunc m_GetPortFunc;

        public int GetQuery(ref uint pcchQuery, ref IntPtr ppwzQuery)
        {
            if(m_GetQueryFunc==null){
                var fp = GetFunctionPointer(13);
                m_GetQueryFunc = (GetQueryFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetQueryFunc));
            } 
            return  m_GetQueryFunc(m_ptr, ref pcchQuery, ref ppwzQuery);
        }
        delegate int GetQueryFunc(IntPtr self, ref uint pcchQuery, ref IntPtr ppwzQuery);
        GetQueryFunc m_GetQueryFunc;

        public int GetSchemeName(ref uint pcchSchemeName, ref IntPtr ppwzSchemeName)
        {
            if(m_GetSchemeNameFunc==null){
                var fp = GetFunctionPointer(14);
                m_GetSchemeNameFunc = (GetSchemeNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetSchemeNameFunc));
            } 
            return  m_GetSchemeNameFunc(m_ptr, ref pcchSchemeName, ref ppwzSchemeName);
        }
        delegate int GetSchemeNameFunc(IntPtr self, ref uint pcchSchemeName, ref IntPtr ppwzSchemeName);
        GetSchemeNameFunc m_GetSchemeNameFunc;

        public int GetUserNameA(ref uint pcchUserName, ref IntPtr ppwzUserName)
        {
            if(m_GetUserNameAFunc==null){
                var fp = GetFunctionPointer(15);
                m_GetUserNameAFunc = (GetUserNameAFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetUserNameAFunc));
            } 
            return  m_GetUserNameAFunc(m_ptr, ref pcchUserName, ref ppwzUserName);
        }
        delegate int GetUserNameAFunc(IntPtr self, ref uint pcchUserName, ref IntPtr ppwzUserName);
        GetUserNameAFunc m_GetUserNameAFunc;

        public int SetFragment([MarshalAs(UnmanagedType.LPWStr)] string pwzNewValue)
        {
            if(m_SetFragmentFunc==null){
                var fp = GetFunctionPointer(16);
                m_SetFragmentFunc = (SetFragmentFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetFragmentFunc));
            } 
            return  m_SetFragmentFunc(m_ptr, pwzNewValue);
        }
        delegate int SetFragmentFunc(IntPtr self, [MarshalAs(UnmanagedType.LPWStr)] string pwzNewValue);
        SetFragmentFunc m_SetFragmentFunc;

        public int SetHost([MarshalAs(UnmanagedType.LPWStr)] string pwzNewValue)
        {
            if(m_SetHostFunc==null){
                var fp = GetFunctionPointer(17);
                m_SetHostFunc = (SetHostFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetHostFunc));
            } 
            return  m_SetHostFunc(m_ptr, pwzNewValue);
        }
        delegate int SetHostFunc(IntPtr self, [MarshalAs(UnmanagedType.LPWStr)] string pwzNewValue);
        SetHostFunc m_SetHostFunc;

        public int SetPassword([MarshalAs(UnmanagedType.LPWStr)] string pwzNewValue)
        {
            if(m_SetPasswordFunc==null){
                var fp = GetFunctionPointer(18);
                m_SetPasswordFunc = (SetPasswordFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetPasswordFunc));
            } 
            return  m_SetPasswordFunc(m_ptr, pwzNewValue);
        }
        delegate int SetPasswordFunc(IntPtr self, [MarshalAs(UnmanagedType.LPWStr)] string pwzNewValue);
        SetPasswordFunc m_SetPasswordFunc;

        public int SetPath([MarshalAs(UnmanagedType.LPWStr)] string pwzNewValue)
        {
            if(m_SetPathFunc==null){
                var fp = GetFunctionPointer(19);
                m_SetPathFunc = (SetPathFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetPathFunc));
            } 
            return  m_SetPathFunc(m_ptr, pwzNewValue);
        }
        delegate int SetPathFunc(IntPtr self, [MarshalAs(UnmanagedType.LPWStr)] string pwzNewValue);
        SetPathFunc m_SetPathFunc;

        public int SetPortA(int fHasPort, uint dwNewValue)
        {
            if(m_SetPortAFunc==null){
                var fp = GetFunctionPointer(20);
                m_SetPortAFunc = (SetPortAFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetPortAFunc));
            } 
            return  m_SetPortAFunc(m_ptr, fHasPort, dwNewValue);
        }
        delegate int SetPortAFunc(IntPtr self, int fHasPort, uint dwNewValue);
        SetPortAFunc m_SetPortAFunc;

        public int SetQuery([MarshalAs(UnmanagedType.LPWStr)] string pwzNewValue)
        {
            if(m_SetQueryFunc==null){
                var fp = GetFunctionPointer(21);
                m_SetQueryFunc = (SetQueryFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetQueryFunc));
            } 
            return  m_SetQueryFunc(m_ptr, pwzNewValue);
        }
        delegate int SetQueryFunc(IntPtr self, [MarshalAs(UnmanagedType.LPWStr)] string pwzNewValue);
        SetQueryFunc m_SetQueryFunc;

        public int SetSchemeName([MarshalAs(UnmanagedType.LPWStr)] string pwzNewValue)
        {
            if(m_SetSchemeNameFunc==null){
                var fp = GetFunctionPointer(22);
                m_SetSchemeNameFunc = (SetSchemeNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetSchemeNameFunc));
            } 
            return  m_SetSchemeNameFunc(m_ptr, pwzNewValue);
        }
        delegate int SetSchemeNameFunc(IntPtr self, [MarshalAs(UnmanagedType.LPWStr)] string pwzNewValue);
        SetSchemeNameFunc m_SetSchemeNameFunc;

        public int SetUserName([MarshalAs(UnmanagedType.LPWStr)] string pwzNewValue)
        {
            if(m_SetUserNameFunc==null){
                var fp = GetFunctionPointer(23);
                m_SetUserNameFunc = (SetUserNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetUserNameFunc));
            } 
            return  m_SetUserNameFunc(m_ptr, pwzNewValue);
        }
        delegate int SetUserNameFunc(IntPtr self, [MarshalAs(UnmanagedType.LPWStr)] string pwzNewValue);
        SetUserNameFunc m_SetUserNameFunc;

        public int RemoveProperties(uint dwPropertyMask)
        {
            if(m_RemovePropertiesFunc==null){
                var fp = GetFunctionPointer(24);
                m_RemovePropertiesFunc = (RemovePropertiesFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(RemovePropertiesFunc));
            } 
            return  m_RemovePropertiesFunc(m_ptr, dwPropertyMask);
        }
        delegate int RemovePropertiesFunc(IntPtr self, uint dwPropertyMask);
        RemovePropertiesFunc m_RemovePropertiesFunc;

        public int HasBeenModified(ref int pfModified)
        {
            if(m_HasBeenModifiedFunc==null){
                var fp = GetFunctionPointer(25);
                m_HasBeenModifiedFunc = (HasBeenModifiedFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(HasBeenModifiedFunc));
            } 
            return  m_HasBeenModifiedFunc(m_ptr, ref pfModified);
        }
        delegate int HasBeenModifiedFunc(IntPtr self, ref int pfModified);
        HasBeenModifiedFunc m_HasBeenModifiedFunc;

    }
}
