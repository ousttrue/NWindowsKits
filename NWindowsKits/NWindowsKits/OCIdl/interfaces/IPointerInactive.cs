// This source code was generated by ClangCaster
using System;
using System.Runtime.InteropServices;

namespace NWindowsKits
{
    // C:/Program Files (x86)/Windows Kits/10/Include/10.0.18362.0/um/OCIdl.h:5636
    public class IPointerInactive : IUnknown // 1
    {
        static Guid s_uuid = new Guid("55980ba0-35aa-11cf-b671-00aa004cd6d8");
        public static new ref Guid IID => ref s_uuid;
        public override ref Guid GetIID() { return ref s_uuid; }

        public int GetActivationPolicy(ref uint pdwPolicy)
        {
            if(m_GetActivationPolicyFunc==null){
                var fp = GetFunctionPointer(3);
                m_GetActivationPolicyFunc = (GetActivationPolicyFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetActivationPolicyFunc));
            } 
            return  m_GetActivationPolicyFunc(m_ptr, ref pdwPolicy);
        }
        delegate int GetActivationPolicyFunc(IntPtr self, ref uint pdwPolicy);
        GetActivationPolicyFunc m_GetActivationPolicyFunc;

        public int OnInactiveMouseMove(ref RECT pRectBounds, int x, int y, uint grfKeyState)
        {
            if(m_OnInactiveMouseMoveFunc==null){
                var fp = GetFunctionPointer(4);
                m_OnInactiveMouseMoveFunc = (OnInactiveMouseMoveFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(OnInactiveMouseMoveFunc));
            } 
            return  m_OnInactiveMouseMoveFunc(m_ptr, ref pRectBounds, x, y, grfKeyState);
        }
        delegate int OnInactiveMouseMoveFunc(IntPtr self, ref RECT pRectBounds, int x, int y, uint grfKeyState);
        OnInactiveMouseMoveFunc m_OnInactiveMouseMoveFunc;

        public int OnInactiveSetCursor(ref RECT pRectBounds, int x, int y, uint dwMouseMsg, int fSetAlways)
        {
            if(m_OnInactiveSetCursorFunc==null){
                var fp = GetFunctionPointer(5);
                m_OnInactiveSetCursorFunc = (OnInactiveSetCursorFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(OnInactiveSetCursorFunc));
            } 
            return  m_OnInactiveSetCursorFunc(m_ptr, ref pRectBounds, x, y, dwMouseMsg, fSetAlways);
        }
        delegate int OnInactiveSetCursorFunc(IntPtr self, ref RECT pRectBounds, int x, int y, uint dwMouseMsg, int fSetAlways);
        OnInactiveSetCursorFunc m_OnInactiveSetCursorFunc;

    }
}
