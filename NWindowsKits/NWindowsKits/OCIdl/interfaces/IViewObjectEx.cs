// This source code was generated by ClangCaster
using System;
using System.Runtime.InteropServices;

namespace NWindowsKits
{
    // C:/Program Files (x86)/Windows Kits/10/Include/10.0.18362.0/um/OCIdl.h:4791
    public class IViewObjectEx : IViewObject2
    {
        static Guid s_uuid = new Guid("3af24292-0c96-11ce-a0cf-00aa00600ab8");
        public static new ref Guid IID => ref s_uuid;
        public override ref Guid GetIID() { return ref s_uuid; }

        public int GetRect(uint dwAspect, ref RECTL pRect)
        {
            if(m_GetRectFunc==null){
                var fp = GetFunctionPointer(10);
                m_GetRectFunc = (GetRectFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetRectFunc));
            } 
            return  m_GetRectFunc(m_ptr, dwAspect, ref pRect);
        }
        delegate int GetRectFunc(IntPtr self, uint dwAspect, ref RECTL pRect);
        GetRectFunc m_GetRectFunc;

        public int GetViewStatus(ref uint pdwStatus)
        {
            if(m_GetViewStatusFunc==null){
                var fp = GetFunctionPointer(11);
                m_GetViewStatusFunc = (GetViewStatusFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetViewStatusFunc));
            } 
            return  m_GetViewStatusFunc(m_ptr, ref pdwStatus);
        }
        delegate int GetViewStatusFunc(IntPtr self, ref uint pdwStatus);
        GetViewStatusFunc m_GetViewStatusFunc;

        public int QueryHitPoint(uint dwAspect, ref RECT pRectBounds, POINT ptlLoc, int lCloseHint, ref uint pHitResult)
        {
            if(m_QueryHitPointFunc==null){
                var fp = GetFunctionPointer(12);
                m_QueryHitPointFunc = (QueryHitPointFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(QueryHitPointFunc));
            } 
            return  m_QueryHitPointFunc(m_ptr, dwAspect, ref pRectBounds, ptlLoc, lCloseHint, ref pHitResult);
        }
        delegate int QueryHitPointFunc(IntPtr self, uint dwAspect, ref RECT pRectBounds, POINT ptlLoc, int lCloseHint, ref uint pHitResult);
        QueryHitPointFunc m_QueryHitPointFunc;

        public int QueryHitRect(uint dwAspect, ref RECT pRectBounds, ref RECT pRectLoc, int lCloseHint, ref uint pHitResult)
        {
            if(m_QueryHitRectFunc==null){
                var fp = GetFunctionPointer(13);
                m_QueryHitRectFunc = (QueryHitRectFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(QueryHitRectFunc));
            } 
            return  m_QueryHitRectFunc(m_ptr, dwAspect, ref pRectBounds, ref pRectLoc, lCloseHint, ref pHitResult);
        }
        delegate int QueryHitRectFunc(IntPtr self, uint dwAspect, ref RECT pRectBounds, ref RECT pRectLoc, int lCloseHint, ref uint pHitResult);
        QueryHitRectFunc m_QueryHitRectFunc;

        public int GetNaturalExtent(uint dwAspect, int lindex, ref DVTARGETDEVICE ptd, HDC hicTargetDev, ref DVEXTENTINFO pExtentInfo, ref SIZE pSizel)
        {
            if(m_GetNaturalExtentFunc==null){
                var fp = GetFunctionPointer(14);
                m_GetNaturalExtentFunc = (GetNaturalExtentFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetNaturalExtentFunc));
            } 
            return  m_GetNaturalExtentFunc(m_ptr, dwAspect, lindex, ref ptd, hicTargetDev, ref pExtentInfo, ref pSizel);
        }
        delegate int GetNaturalExtentFunc(IntPtr self, uint dwAspect, int lindex, ref DVTARGETDEVICE ptd, HDC hicTargetDev, ref DVEXTENTINFO pExtentInfo, ref SIZE pSizel);
        GetNaturalExtentFunc m_GetNaturalExtentFunc;

    }
}
