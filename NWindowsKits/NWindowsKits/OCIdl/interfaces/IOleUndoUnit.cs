// This source code was generated by ClangCaster
using System;
using System.Runtime.InteropServices;

namespace NWindowsKits
{
    // C:/Program Files (x86)/Windows Kits/10/Include/10.0.18362.0/um/OCIdl.h:5040
    public class IOleUndoUnit : IUnknown
    {
        static Guid s_uuid = new Guid("894ad3b0-ef97-11ce-9bc9-00aa00608e01");
        public static new ref Guid IID => ref s_uuid;
        public override ref Guid GetIID() { return ref s_uuid; }

        public int Do(IntPtr pUndoManager)
        {
            if(m_DoFunc==null){
                var fp = GetFunctionPointer(3);
                m_DoFunc = (DoFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(DoFunc));
            } 
            return  m_DoFunc(m_ptr, pUndoManager);
        }
        delegate int DoFunc(IntPtr self, IntPtr pUndoManager);
        DoFunc m_DoFunc;

        public int GetDescription(ref IntPtr pBstr)
        {
            if(m_GetDescriptionFunc==null){
                var fp = GetFunctionPointer(4);
                m_GetDescriptionFunc = (GetDescriptionFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetDescriptionFunc));
            } 
            return  m_GetDescriptionFunc(m_ptr, ref pBstr);
        }
        delegate int GetDescriptionFunc(IntPtr self, ref IntPtr pBstr);
        GetDescriptionFunc m_GetDescriptionFunc;

        public int GetUnitType(IntPtr pClsid, ref int plID)
        {
            if(m_GetUnitTypeFunc==null){
                var fp = GetFunctionPointer(5);
                m_GetUnitTypeFunc = (GetUnitTypeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetUnitTypeFunc));
            } 
            return  m_GetUnitTypeFunc(m_ptr, pClsid, ref plID);
        }
        delegate int GetUnitTypeFunc(IntPtr self, IntPtr pClsid, ref int plID);
        GetUnitTypeFunc m_GetUnitTypeFunc;

        public int OnNextAdd()
        {
            if(m_OnNextAddFunc==null){
                var fp = GetFunctionPointer(6);
                m_OnNextAddFunc = (OnNextAddFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(OnNextAddFunc));
            } 
            return  m_OnNextAddFunc(m_ptr);
        }
        delegate int OnNextAddFunc(IntPtr self);
        OnNextAddFunc m_OnNextAddFunc;

    }
}
