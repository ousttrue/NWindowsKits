// This source code was generated by ClangCaster
using System;
using System.Runtime.InteropServices;

namespace NWindowsKits
{
    // C:/Program Files (x86)/Windows Kits/10/Include/10.0.18362.0/um/oleidl.h:562
    public class IOleCache2 : IOleCache // 1
    {
        static Guid s_uuid = new Guid("00000128-0000-0000-c000-000000000046");
        public static new ref Guid IID => ref s_uuid;
        public override ref Guid GetIID() { return ref s_uuid; }

        public int UpdateCache(IntPtr pDataObject, uint grfUpdf, IntPtr pReserved)
        {
            if(m_UpdateCacheFunc==null){
                var fp = GetFunctionPointer(8);
                m_UpdateCacheFunc = (UpdateCacheFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(UpdateCacheFunc));
            } 
            
            return  m_UpdateCacheFunc(m_ptr, pDataObject, grfUpdf, pReserved);
        }
        delegate int UpdateCacheFunc(IntPtr self, IntPtr pDataObject, uint grfUpdf, IntPtr pReserved);
        UpdateCacheFunc m_UpdateCacheFunc;

        public int DiscardCache(uint dwDiscardOptions)
        {
            if(m_DiscardCacheFunc==null){
                var fp = GetFunctionPointer(9);
                m_DiscardCacheFunc = (DiscardCacheFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(DiscardCacheFunc));
            } 
            
            return  m_DiscardCacheFunc(m_ptr, dwDiscardOptions);
        }
        delegate int DiscardCacheFunc(IntPtr self, uint dwDiscardOptions);
        DiscardCacheFunc m_DiscardCacheFunc;

    }
}
