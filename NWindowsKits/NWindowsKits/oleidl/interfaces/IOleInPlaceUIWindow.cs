// This source code was generated by ClangCaster
using System;
using System.Runtime.InteropServices;

namespace NWindowsKits
{
    // C:/Program Files (x86)/Windows Kits/10/Include/10.0.18362.0/um/oleidl.h:2018
    public class IOleInPlaceUIWindow : IOleWindow // 1
    {
        static Guid s_uuid = new Guid("00000115-0000-0000-c000-000000000046");
        public static new ref Guid IID => ref s_uuid;
        public override ref Guid GetIID() { return ref s_uuid; }

        public int GetBorder(ref RECT lprectBorder)
        {
            if(m_GetBorderFunc==null){
                var fp = GetFunctionPointer(5);
                m_GetBorderFunc = (GetBorderFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetBorderFunc));
            } 
            return  m_GetBorderFunc(m_ptr, ref lprectBorder);
        }
        delegate int GetBorderFunc(IntPtr self, ref RECT lprectBorder);
        GetBorderFunc m_GetBorderFunc;

        public int RequestBorderSpace(ref RECT pborderwidths)
        {
            if(m_RequestBorderSpaceFunc==null){
                var fp = GetFunctionPointer(6);
                m_RequestBorderSpaceFunc = (RequestBorderSpaceFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(RequestBorderSpaceFunc));
            } 
            return  m_RequestBorderSpaceFunc(m_ptr, ref pborderwidths);
        }
        delegate int RequestBorderSpaceFunc(IntPtr self, ref RECT pborderwidths);
        RequestBorderSpaceFunc m_RequestBorderSpaceFunc;

        public int SetBorderSpace(ref RECT pborderwidths)
        {
            if(m_SetBorderSpaceFunc==null){
                var fp = GetFunctionPointer(7);
                m_SetBorderSpaceFunc = (SetBorderSpaceFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetBorderSpaceFunc));
            } 
            return  m_SetBorderSpaceFunc(m_ptr, ref pborderwidths);
        }
        delegate int SetBorderSpaceFunc(IntPtr self, ref RECT pborderwidths);
        SetBorderSpaceFunc m_SetBorderSpaceFunc;

        public int SetActiveObject(IntPtr pActiveObject, IntPtr pszObjName)
        {
            if(m_SetActiveObjectFunc==null){
                var fp = GetFunctionPointer(8);
                m_SetActiveObjectFunc = (SetActiveObjectFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetActiveObjectFunc));
            } 
            return  m_SetActiveObjectFunc(m_ptr, pActiveObject, pszObjName);
        }
        delegate int SetActiveObjectFunc(IntPtr self, IntPtr pActiveObject, IntPtr pszObjName);
        SetActiveObjectFunc m_SetActiveObjectFunc;

    }
}
