// This source code was generated by ClangCaster
using System;
using System.Runtime.InteropServices;

namespace NWindowsKits
{
    // C:/Program Files (x86)/Windows Kits/10/Include/10.0.18362.0/um/d3d11.h:10477
    public class ID3D11VideoProcessor : ID3D11DeviceChild
    {
        static Guid s_uuid = new Guid("1d7b0652-185f-41c6-85ce-0c5be3d4ae6c");
        public static new ref Guid IID => ref s_uuid;
        public override ref Guid GetIID() { return ref s_uuid; }

        public void GetContentDesc(ref D3D11_VIDEO_PROCESSOR_CONTENT_DESC pDesc)
        {
            if(m_GetContentDescFunc==null){
                var fp = GetFunctionPointer(7);
                m_GetContentDescFunc = (GetContentDescFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetContentDescFunc));
            } 
             m_GetContentDescFunc(m_ptr, ref pDesc);
        }
        delegate void GetContentDescFunc(IntPtr self, ref D3D11_VIDEO_PROCESSOR_CONTENT_DESC pDesc);
        GetContentDescFunc m_GetContentDescFunc;

        public void GetRateConversionCaps(ref D3D11_VIDEO_PROCESSOR_RATE_CONVERSION_CAPS pCaps)
        {
            if(m_GetRateConversionCapsFunc==null){
                var fp = GetFunctionPointer(8);
                m_GetRateConversionCapsFunc = (GetRateConversionCapsFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetRateConversionCapsFunc));
            } 
             m_GetRateConversionCapsFunc(m_ptr, ref pCaps);
        }
        delegate void GetRateConversionCapsFunc(IntPtr self, ref D3D11_VIDEO_PROCESSOR_RATE_CONVERSION_CAPS pCaps);
        GetRateConversionCapsFunc m_GetRateConversionCapsFunc;

    }
}
