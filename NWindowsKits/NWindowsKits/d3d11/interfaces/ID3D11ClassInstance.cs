// This source code was generated by ClangCaster
using System;
using System.Runtime.InteropServices;

namespace NWindowsKits
{
    // C:/Program Files (x86)/Windows Kits/10/Include/10.0.18362.0/um/d3d11.h:6830
    public class ID3D11ClassInstance : ID3D11DeviceChild // 1
    {
        static Guid s_uuid = new Guid("a6cd7faa-b0b7-4a2f-9436-8662a65797cb");
        public static new ref Guid IID => ref s_uuid;
        public override ref Guid GetIID() { return ref s_uuid; }

        public void GetClassLinkage(ref IntPtr ppLinkage)
        {
            if(m_GetClassLinkageFunc==null){
                var fp = GetFunctionPointer(7);
                m_GetClassLinkageFunc = (GetClassLinkageFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetClassLinkageFunc));
            } 
            
             m_GetClassLinkageFunc(m_ptr, ref ppLinkage);
        }
        delegate void GetClassLinkageFunc(IntPtr self, ref IntPtr ppLinkage);
        GetClassLinkageFunc m_GetClassLinkageFunc;

        public void GetDesc(ref D3D11_CLASS_INSTANCE_DESC pDesc)
        {
            if(m_GetDescFunc==null){
                var fp = GetFunctionPointer(8);
                m_GetDescFunc = (GetDescFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetDescFunc));
            } 
            
             m_GetDescFunc(m_ptr, ref pDesc);
        }
        delegate void GetDescFunc(IntPtr self, ref D3D11_CLASS_INSTANCE_DESC pDesc);
        GetDescFunc m_GetDescFunc;

        public void GetInstanceName(ref sbyte pInstanceName, IntPtr pBufferLength)
        {
            if(m_GetInstanceNameFunc==null){
                var fp = GetFunctionPointer(9);
                m_GetInstanceNameFunc = (GetInstanceNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetInstanceNameFunc));
            } 
            
             m_GetInstanceNameFunc(m_ptr, ref pInstanceName, pBufferLength);
        }
        delegate void GetInstanceNameFunc(IntPtr self, ref sbyte pInstanceName, IntPtr pBufferLength);
        GetInstanceNameFunc m_GetInstanceNameFunc;

        public void GetTypeName(ref sbyte pTypeName, IntPtr pBufferLength)
        {
            if(m_GetTypeNameFunc==null){
                var fp = GetFunctionPointer(10);
                m_GetTypeNameFunc = (GetTypeNameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetTypeNameFunc));
            } 
            
             m_GetTypeNameFunc(m_ptr, ref pTypeName, pBufferLength);
        }
        delegate void GetTypeNameFunc(IntPtr self, ref sbyte pTypeName, IntPtr pBufferLength);
        GetTypeNameFunc m_GetTypeNameFunc;

    }
}
