// This source code was generated by ClangCaster
using System;
using System.Runtime.InteropServices;

namespace NWindowsKits
{
    // C:/Program Files (x86)/Windows Kits/10/Include/10.0.18362.0/um/d3d11.h:13172
    public class ID3D11VideoDevice : IUnknown
    {
        static Guid s_uuid = new Guid("10ec4d5b-975a-4689-b9e4-d0aac30fe333");
        public static new ref Guid IID => ref s_uuid;
        public override ref Guid GetIID() { return ref s_uuid; }

        public int CreateVideoDecoder(ref D3D11_VIDEO_DECODER_DESC pVideoDesc, ref D3D11_VIDEO_DECODER_CONFIG pConfig, ref IntPtr ppDecoder)
        {
            if(m_CreateVideoDecoderFunc==null){
                var fp = GetFunctionPointer(3);
                m_CreateVideoDecoderFunc = (CreateVideoDecoderFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateVideoDecoderFunc));
            } 
            return  m_CreateVideoDecoderFunc(m_ptr, ref pVideoDesc, ref pConfig, ref ppDecoder);
        }
        delegate int CreateVideoDecoderFunc(IntPtr self, ref D3D11_VIDEO_DECODER_DESC pVideoDesc, ref D3D11_VIDEO_DECODER_CONFIG pConfig, ref IntPtr ppDecoder);
        CreateVideoDecoderFunc m_CreateVideoDecoderFunc;

        public int CreateVideoProcessor(IntPtr pEnum, uint RateConversionIndex, ref IntPtr ppVideoProcessor)
        {
            if(m_CreateVideoProcessorFunc==null){
                var fp = GetFunctionPointer(4);
                m_CreateVideoProcessorFunc = (CreateVideoProcessorFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateVideoProcessorFunc));
            } 
            return  m_CreateVideoProcessorFunc(m_ptr, pEnum, RateConversionIndex, ref ppVideoProcessor);
        }
        delegate int CreateVideoProcessorFunc(IntPtr self, IntPtr pEnum, uint RateConversionIndex, ref IntPtr ppVideoProcessor);
        CreateVideoProcessorFunc m_CreateVideoProcessorFunc;

        public int CreateAuthenticatedChannel(D3D11_AUTHENTICATED_CHANNEL_TYPE ChannelType, ref IntPtr ppAuthenticatedChannel)
        {
            if(m_CreateAuthenticatedChannelFunc==null){
                var fp = GetFunctionPointer(5);
                m_CreateAuthenticatedChannelFunc = (CreateAuthenticatedChannelFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateAuthenticatedChannelFunc));
            } 
            return  m_CreateAuthenticatedChannelFunc(m_ptr, ChannelType, ref ppAuthenticatedChannel);
        }
        delegate int CreateAuthenticatedChannelFunc(IntPtr self, D3D11_AUTHENTICATED_CHANNEL_TYPE ChannelType, ref IntPtr ppAuthenticatedChannel);
        CreateAuthenticatedChannelFunc m_CreateAuthenticatedChannelFunc;

        public int CreateCryptoSession(ref GUID pCryptoType, ref GUID pDecoderProfile, ref GUID pKeyExchangeType, ref IntPtr ppCryptoSession)
        {
            if(m_CreateCryptoSessionFunc==null){
                var fp = GetFunctionPointer(6);
                m_CreateCryptoSessionFunc = (CreateCryptoSessionFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateCryptoSessionFunc));
            } 
            return  m_CreateCryptoSessionFunc(m_ptr, ref pCryptoType, ref pDecoderProfile, ref pKeyExchangeType, ref ppCryptoSession);
        }
        delegate int CreateCryptoSessionFunc(IntPtr self, ref GUID pCryptoType, ref GUID pDecoderProfile, ref GUID pKeyExchangeType, ref IntPtr ppCryptoSession);
        CreateCryptoSessionFunc m_CreateCryptoSessionFunc;

        public int CreateVideoDecoderOutputView(IntPtr pResource, ref D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC pDesc, ref IntPtr ppVDOVView)
        {
            if(m_CreateVideoDecoderOutputViewFunc==null){
                var fp = GetFunctionPointer(7);
                m_CreateVideoDecoderOutputViewFunc = (CreateVideoDecoderOutputViewFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateVideoDecoderOutputViewFunc));
            } 
            return  m_CreateVideoDecoderOutputViewFunc(m_ptr, pResource, ref pDesc, ref ppVDOVView);
        }
        delegate int CreateVideoDecoderOutputViewFunc(IntPtr self, IntPtr pResource, ref D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC pDesc, ref IntPtr ppVDOVView);
        CreateVideoDecoderOutputViewFunc m_CreateVideoDecoderOutputViewFunc;

        public int CreateVideoProcessorInputView(IntPtr pResource, IntPtr pEnum, ref D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC pDesc, ref IntPtr ppVPIView)
        {
            if(m_CreateVideoProcessorInputViewFunc==null){
                var fp = GetFunctionPointer(8);
                m_CreateVideoProcessorInputViewFunc = (CreateVideoProcessorInputViewFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateVideoProcessorInputViewFunc));
            } 
            return  m_CreateVideoProcessorInputViewFunc(m_ptr, pResource, pEnum, ref pDesc, ref ppVPIView);
        }
        delegate int CreateVideoProcessorInputViewFunc(IntPtr self, IntPtr pResource, IntPtr pEnum, ref D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC pDesc, ref IntPtr ppVPIView);
        CreateVideoProcessorInputViewFunc m_CreateVideoProcessorInputViewFunc;

        public int CreateVideoProcessorOutputView(IntPtr pResource, IntPtr pEnum, ref D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC pDesc, ref IntPtr ppVPOView)
        {
            if(m_CreateVideoProcessorOutputViewFunc==null){
                var fp = GetFunctionPointer(9);
                m_CreateVideoProcessorOutputViewFunc = (CreateVideoProcessorOutputViewFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateVideoProcessorOutputViewFunc));
            } 
            return  m_CreateVideoProcessorOutputViewFunc(m_ptr, pResource, pEnum, ref pDesc, ref ppVPOView);
        }
        delegate int CreateVideoProcessorOutputViewFunc(IntPtr self, IntPtr pResource, IntPtr pEnum, ref D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC pDesc, ref IntPtr ppVPOView);
        CreateVideoProcessorOutputViewFunc m_CreateVideoProcessorOutputViewFunc;

        public int CreateVideoProcessorEnumerator(ref D3D11_VIDEO_PROCESSOR_CONTENT_DESC pDesc, ref IntPtr ppEnum)
        {
            if(m_CreateVideoProcessorEnumeratorFunc==null){
                var fp = GetFunctionPointer(10);
                m_CreateVideoProcessorEnumeratorFunc = (CreateVideoProcessorEnumeratorFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateVideoProcessorEnumeratorFunc));
            } 
            return  m_CreateVideoProcessorEnumeratorFunc(m_ptr, ref pDesc, ref ppEnum);
        }
        delegate int CreateVideoProcessorEnumeratorFunc(IntPtr self, ref D3D11_VIDEO_PROCESSOR_CONTENT_DESC pDesc, ref IntPtr ppEnum);
        CreateVideoProcessorEnumeratorFunc m_CreateVideoProcessorEnumeratorFunc;

        public uint GetVideoDecoderProfileCount()
        {
            if(m_GetVideoDecoderProfileCountFunc==null){
                var fp = GetFunctionPointer(11);
                m_GetVideoDecoderProfileCountFunc = (GetVideoDecoderProfileCountFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetVideoDecoderProfileCountFunc));
            } 
            return  m_GetVideoDecoderProfileCountFunc(m_ptr);
        }
        delegate uint GetVideoDecoderProfileCountFunc(IntPtr self);
        GetVideoDecoderProfileCountFunc m_GetVideoDecoderProfileCountFunc;

        public int GetVideoDecoderProfile(uint Index, ref GUID pDecoderProfile)
        {
            if(m_GetVideoDecoderProfileFunc==null){
                var fp = GetFunctionPointer(12);
                m_GetVideoDecoderProfileFunc = (GetVideoDecoderProfileFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetVideoDecoderProfileFunc));
            } 
            return  m_GetVideoDecoderProfileFunc(m_ptr, Index, ref pDecoderProfile);
        }
        delegate int GetVideoDecoderProfileFunc(IntPtr self, uint Index, ref GUID pDecoderProfile);
        GetVideoDecoderProfileFunc m_GetVideoDecoderProfileFunc;

        public int CheckVideoDecoderFormat(ref GUID pDecoderProfile, DXGI_FORMAT Format, ref int pSupported)
        {
            if(m_CheckVideoDecoderFormatFunc==null){
                var fp = GetFunctionPointer(13);
                m_CheckVideoDecoderFormatFunc = (CheckVideoDecoderFormatFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CheckVideoDecoderFormatFunc));
            } 
            return  m_CheckVideoDecoderFormatFunc(m_ptr, ref pDecoderProfile, Format, ref pSupported);
        }
        delegate int CheckVideoDecoderFormatFunc(IntPtr self, ref GUID pDecoderProfile, DXGI_FORMAT Format, ref int pSupported);
        CheckVideoDecoderFormatFunc m_CheckVideoDecoderFormatFunc;

        public int GetVideoDecoderConfigCount(ref D3D11_VIDEO_DECODER_DESC pDesc, ref uint pCount)
        {
            if(m_GetVideoDecoderConfigCountFunc==null){
                var fp = GetFunctionPointer(14);
                m_GetVideoDecoderConfigCountFunc = (GetVideoDecoderConfigCountFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetVideoDecoderConfigCountFunc));
            } 
            return  m_GetVideoDecoderConfigCountFunc(m_ptr, ref pDesc, ref pCount);
        }
        delegate int GetVideoDecoderConfigCountFunc(IntPtr self, ref D3D11_VIDEO_DECODER_DESC pDesc, ref uint pCount);
        GetVideoDecoderConfigCountFunc m_GetVideoDecoderConfigCountFunc;

        public int GetVideoDecoderConfig(ref D3D11_VIDEO_DECODER_DESC pDesc, uint Index, ref D3D11_VIDEO_DECODER_CONFIG pConfig)
        {
            if(m_GetVideoDecoderConfigFunc==null){
                var fp = GetFunctionPointer(15);
                m_GetVideoDecoderConfigFunc = (GetVideoDecoderConfigFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetVideoDecoderConfigFunc));
            } 
            return  m_GetVideoDecoderConfigFunc(m_ptr, ref pDesc, Index, ref pConfig);
        }
        delegate int GetVideoDecoderConfigFunc(IntPtr self, ref D3D11_VIDEO_DECODER_DESC pDesc, uint Index, ref D3D11_VIDEO_DECODER_CONFIG pConfig);
        GetVideoDecoderConfigFunc m_GetVideoDecoderConfigFunc;

        public int GetContentProtectionCaps(ref GUID pCryptoType, ref GUID pDecoderProfile, ref D3D11_VIDEO_CONTENT_PROTECTION_CAPS pCaps)
        {
            if(m_GetContentProtectionCapsFunc==null){
                var fp = GetFunctionPointer(16);
                m_GetContentProtectionCapsFunc = (GetContentProtectionCapsFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetContentProtectionCapsFunc));
            } 
            return  m_GetContentProtectionCapsFunc(m_ptr, ref pCryptoType, ref pDecoderProfile, ref pCaps);
        }
        delegate int GetContentProtectionCapsFunc(IntPtr self, ref GUID pCryptoType, ref GUID pDecoderProfile, ref D3D11_VIDEO_CONTENT_PROTECTION_CAPS pCaps);
        GetContentProtectionCapsFunc m_GetContentProtectionCapsFunc;

        public int CheckCryptoKeyExchange(ref GUID pCryptoType, ref GUID pDecoderProfile, uint Index, ref GUID pKeyExchangeType)
        {
            if(m_CheckCryptoKeyExchangeFunc==null){
                var fp = GetFunctionPointer(17);
                m_CheckCryptoKeyExchangeFunc = (CheckCryptoKeyExchangeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CheckCryptoKeyExchangeFunc));
            } 
            return  m_CheckCryptoKeyExchangeFunc(m_ptr, ref pCryptoType, ref pDecoderProfile, Index, ref pKeyExchangeType);
        }
        delegate int CheckCryptoKeyExchangeFunc(IntPtr self, ref GUID pCryptoType, ref GUID pDecoderProfile, uint Index, ref GUID pKeyExchangeType);
        CheckCryptoKeyExchangeFunc m_CheckCryptoKeyExchangeFunc;

        public int SetPrivateData(ref GUID guid, uint DataSize, IntPtr pData)
        {
            if(m_SetPrivateDataFunc==null){
                var fp = GetFunctionPointer(18);
                m_SetPrivateDataFunc = (SetPrivateDataFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetPrivateDataFunc));
            } 
            return  m_SetPrivateDataFunc(m_ptr, ref guid, DataSize, pData);
        }
        delegate int SetPrivateDataFunc(IntPtr self, ref GUID guid, uint DataSize, IntPtr pData);
        SetPrivateDataFunc m_SetPrivateDataFunc;

        public int SetPrivateDataInterface(ref GUID guid, IntPtr pData)
        {
            if(m_SetPrivateDataInterfaceFunc==null){
                var fp = GetFunctionPointer(19);
                m_SetPrivateDataInterfaceFunc = (SetPrivateDataInterfaceFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetPrivateDataInterfaceFunc));
            } 
            return  m_SetPrivateDataInterfaceFunc(m_ptr, ref guid, pData);
        }
        delegate int SetPrivateDataInterfaceFunc(IntPtr self, ref GUID guid, IntPtr pData);
        SetPrivateDataInterfaceFunc m_SetPrivateDataInterfaceFunc;

    }
}
