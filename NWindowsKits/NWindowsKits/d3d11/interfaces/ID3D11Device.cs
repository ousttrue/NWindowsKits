// This source code was generated by ClangCaster
using System;
using System.Runtime.InteropServices;

namespace NWindowsKits
{
    // C:/Program Files (x86)/Windows Kits/10/Include/10.0.18362.0/um/d3d11.h:13575
    public class ID3D11Device : IUnknown // 1
    {
        static Guid s_uuid = new Guid("db6f6ddb-ac77-4e88-8253-819df9bbf140");
        public static new ref Guid IID => ref s_uuid;
        public override ref Guid GetIID() { return ref s_uuid; }

        public int CreateBuffer(ref D3D11_BUFFER_DESC pDesc, ref D3D11_SUBRESOURCE_DATA pInitialData, ref IntPtr ppBuffer)
        {
            if(m_CreateBufferFunc==null){
                var fp = GetFunctionPointer(3);
                m_CreateBufferFunc = (CreateBufferFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateBufferFunc));
            } 
            return  m_CreateBufferFunc(m_ptr, ref pDesc, ref pInitialData, ref ppBuffer);
        }
        delegate int CreateBufferFunc(IntPtr self, ref D3D11_BUFFER_DESC pDesc, ref D3D11_SUBRESOURCE_DATA pInitialData, ref IntPtr ppBuffer);
        CreateBufferFunc m_CreateBufferFunc;

        public int CreateTexture1D(ref D3D11_TEXTURE1D_DESC pDesc, ref D3D11_SUBRESOURCE_DATA pInitialData, ref IntPtr ppTexture1D)
        {
            if(m_CreateTexture1DFunc==null){
                var fp = GetFunctionPointer(4);
                m_CreateTexture1DFunc = (CreateTexture1DFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateTexture1DFunc));
            } 
            return  m_CreateTexture1DFunc(m_ptr, ref pDesc, ref pInitialData, ref ppTexture1D);
        }
        delegate int CreateTexture1DFunc(IntPtr self, ref D3D11_TEXTURE1D_DESC pDesc, ref D3D11_SUBRESOURCE_DATA pInitialData, ref IntPtr ppTexture1D);
        CreateTexture1DFunc m_CreateTexture1DFunc;

        public int CreateTexture2D(ref D3D11_TEXTURE2D_DESC pDesc, ref D3D11_SUBRESOURCE_DATA pInitialData, ref IntPtr ppTexture2D)
        {
            if(m_CreateTexture2DFunc==null){
                var fp = GetFunctionPointer(5);
                m_CreateTexture2DFunc = (CreateTexture2DFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateTexture2DFunc));
            } 
            return  m_CreateTexture2DFunc(m_ptr, ref pDesc, ref pInitialData, ref ppTexture2D);
        }
        delegate int CreateTexture2DFunc(IntPtr self, ref D3D11_TEXTURE2D_DESC pDesc, ref D3D11_SUBRESOURCE_DATA pInitialData, ref IntPtr ppTexture2D);
        CreateTexture2DFunc m_CreateTexture2DFunc;

        public int CreateTexture3D(ref D3D11_TEXTURE3D_DESC pDesc, ref D3D11_SUBRESOURCE_DATA pInitialData, ref IntPtr ppTexture3D)
        {
            if(m_CreateTexture3DFunc==null){
                var fp = GetFunctionPointer(6);
                m_CreateTexture3DFunc = (CreateTexture3DFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateTexture3DFunc));
            } 
            return  m_CreateTexture3DFunc(m_ptr, ref pDesc, ref pInitialData, ref ppTexture3D);
        }
        delegate int CreateTexture3DFunc(IntPtr self, ref D3D11_TEXTURE3D_DESC pDesc, ref D3D11_SUBRESOURCE_DATA pInitialData, ref IntPtr ppTexture3D);
        CreateTexture3DFunc m_CreateTexture3DFunc;

        public int CreateShaderResourceView(IntPtr pResource, ref D3D11_SHADER_RESOURCE_VIEW_DESC pDesc, ref IntPtr ppSRView)
        {
            if(m_CreateShaderResourceViewFunc==null){
                var fp = GetFunctionPointer(7);
                m_CreateShaderResourceViewFunc = (CreateShaderResourceViewFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateShaderResourceViewFunc));
            } 
            return  m_CreateShaderResourceViewFunc(m_ptr, pResource, ref pDesc, ref ppSRView);
        }
        delegate int CreateShaderResourceViewFunc(IntPtr self, IntPtr pResource, ref D3D11_SHADER_RESOURCE_VIEW_DESC pDesc, ref IntPtr ppSRView);
        CreateShaderResourceViewFunc m_CreateShaderResourceViewFunc;

        public int CreateUnorderedAccessView(IntPtr pResource, ref D3D11_UNORDERED_ACCESS_VIEW_DESC pDesc, ref IntPtr ppUAView)
        {
            if(m_CreateUnorderedAccessViewFunc==null){
                var fp = GetFunctionPointer(8);
                m_CreateUnorderedAccessViewFunc = (CreateUnorderedAccessViewFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateUnorderedAccessViewFunc));
            } 
            return  m_CreateUnorderedAccessViewFunc(m_ptr, pResource, ref pDesc, ref ppUAView);
        }
        delegate int CreateUnorderedAccessViewFunc(IntPtr self, IntPtr pResource, ref D3D11_UNORDERED_ACCESS_VIEW_DESC pDesc, ref IntPtr ppUAView);
        CreateUnorderedAccessViewFunc m_CreateUnorderedAccessViewFunc;

        public int CreateRenderTargetView(IntPtr pResource, ref D3D11_RENDER_TARGET_VIEW_DESC pDesc, ref IntPtr ppRTView)
        {
            if(m_CreateRenderTargetViewFunc==null){
                var fp = GetFunctionPointer(9);
                m_CreateRenderTargetViewFunc = (CreateRenderTargetViewFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateRenderTargetViewFunc));
            } 
            return  m_CreateRenderTargetViewFunc(m_ptr, pResource, ref pDesc, ref ppRTView);
        }
        delegate int CreateRenderTargetViewFunc(IntPtr self, IntPtr pResource, ref D3D11_RENDER_TARGET_VIEW_DESC pDesc, ref IntPtr ppRTView);
        CreateRenderTargetViewFunc m_CreateRenderTargetViewFunc;

        public int CreateDepthStencilView(IntPtr pResource, ref D3D11_DEPTH_STENCIL_VIEW_DESC pDesc, ref IntPtr ppDepthStencilView)
        {
            if(m_CreateDepthStencilViewFunc==null){
                var fp = GetFunctionPointer(10);
                m_CreateDepthStencilViewFunc = (CreateDepthStencilViewFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateDepthStencilViewFunc));
            } 
            return  m_CreateDepthStencilViewFunc(m_ptr, pResource, ref pDesc, ref ppDepthStencilView);
        }
        delegate int CreateDepthStencilViewFunc(IntPtr self, IntPtr pResource, ref D3D11_DEPTH_STENCIL_VIEW_DESC pDesc, ref IntPtr ppDepthStencilView);
        CreateDepthStencilViewFunc m_CreateDepthStencilViewFunc;

        public int CreateInputLayout(ref D3D11_INPUT_ELEMENT_DESC pInputElementDescs, uint NumElements, IntPtr pShaderBytecodeWithInputSignature, ulong BytecodeLength, ref IntPtr ppInputLayout)
        {
            if(m_CreateInputLayoutFunc==null){
                var fp = GetFunctionPointer(11);
                m_CreateInputLayoutFunc = (CreateInputLayoutFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateInputLayoutFunc));
            } 
            return  m_CreateInputLayoutFunc(m_ptr, ref pInputElementDescs, NumElements, pShaderBytecodeWithInputSignature, BytecodeLength, ref ppInputLayout);
        }
        delegate int CreateInputLayoutFunc(IntPtr self, ref D3D11_INPUT_ELEMENT_DESC pInputElementDescs, uint NumElements, IntPtr pShaderBytecodeWithInputSignature, ulong BytecodeLength, ref IntPtr ppInputLayout);
        CreateInputLayoutFunc m_CreateInputLayoutFunc;

        public int CreateVertexShader(IntPtr pShaderBytecode, ulong BytecodeLength, IntPtr pClassLinkage, ref IntPtr ppVertexShader)
        {
            if(m_CreateVertexShaderFunc==null){
                var fp = GetFunctionPointer(12);
                m_CreateVertexShaderFunc = (CreateVertexShaderFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateVertexShaderFunc));
            } 
            return  m_CreateVertexShaderFunc(m_ptr, pShaderBytecode, BytecodeLength, pClassLinkage, ref ppVertexShader);
        }
        delegate int CreateVertexShaderFunc(IntPtr self, IntPtr pShaderBytecode, ulong BytecodeLength, IntPtr pClassLinkage, ref IntPtr ppVertexShader);
        CreateVertexShaderFunc m_CreateVertexShaderFunc;

        public int CreateGeometryShader(IntPtr pShaderBytecode, ulong BytecodeLength, IntPtr pClassLinkage, ref IntPtr ppGeometryShader)
        {
            if(m_CreateGeometryShaderFunc==null){
                var fp = GetFunctionPointer(13);
                m_CreateGeometryShaderFunc = (CreateGeometryShaderFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateGeometryShaderFunc));
            } 
            return  m_CreateGeometryShaderFunc(m_ptr, pShaderBytecode, BytecodeLength, pClassLinkage, ref ppGeometryShader);
        }
        delegate int CreateGeometryShaderFunc(IntPtr self, IntPtr pShaderBytecode, ulong BytecodeLength, IntPtr pClassLinkage, ref IntPtr ppGeometryShader);
        CreateGeometryShaderFunc m_CreateGeometryShaderFunc;

        public int CreateGeometryShaderWithStreamOutput(IntPtr pShaderBytecode, ulong BytecodeLength, ref D3D11_SO_DECLARATION_ENTRY pSODeclaration, uint NumEntries, ref uint pBufferStrides, uint NumStrides, uint RasterizedStream, IntPtr pClassLinkage, ref IntPtr ppGeometryShader)
        {
            if(m_CreateGeometryShaderWithStreamOutputFunc==null){
                var fp = GetFunctionPointer(14);
                m_CreateGeometryShaderWithStreamOutputFunc = (CreateGeometryShaderWithStreamOutputFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateGeometryShaderWithStreamOutputFunc));
            } 
            return  m_CreateGeometryShaderWithStreamOutputFunc(m_ptr, pShaderBytecode, BytecodeLength, ref pSODeclaration, NumEntries, ref pBufferStrides, NumStrides, RasterizedStream, pClassLinkage, ref ppGeometryShader);
        }
        delegate int CreateGeometryShaderWithStreamOutputFunc(IntPtr self, IntPtr pShaderBytecode, ulong BytecodeLength, ref D3D11_SO_DECLARATION_ENTRY pSODeclaration, uint NumEntries, ref uint pBufferStrides, uint NumStrides, uint RasterizedStream, IntPtr pClassLinkage, ref IntPtr ppGeometryShader);
        CreateGeometryShaderWithStreamOutputFunc m_CreateGeometryShaderWithStreamOutputFunc;

        public int CreatePixelShader(IntPtr pShaderBytecode, ulong BytecodeLength, IntPtr pClassLinkage, ref IntPtr ppPixelShader)
        {
            if(m_CreatePixelShaderFunc==null){
                var fp = GetFunctionPointer(15);
                m_CreatePixelShaderFunc = (CreatePixelShaderFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreatePixelShaderFunc));
            } 
            return  m_CreatePixelShaderFunc(m_ptr, pShaderBytecode, BytecodeLength, pClassLinkage, ref ppPixelShader);
        }
        delegate int CreatePixelShaderFunc(IntPtr self, IntPtr pShaderBytecode, ulong BytecodeLength, IntPtr pClassLinkage, ref IntPtr ppPixelShader);
        CreatePixelShaderFunc m_CreatePixelShaderFunc;

        public int CreateHullShader(IntPtr pShaderBytecode, ulong BytecodeLength, IntPtr pClassLinkage, ref IntPtr ppHullShader)
        {
            if(m_CreateHullShaderFunc==null){
                var fp = GetFunctionPointer(16);
                m_CreateHullShaderFunc = (CreateHullShaderFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateHullShaderFunc));
            } 
            return  m_CreateHullShaderFunc(m_ptr, pShaderBytecode, BytecodeLength, pClassLinkage, ref ppHullShader);
        }
        delegate int CreateHullShaderFunc(IntPtr self, IntPtr pShaderBytecode, ulong BytecodeLength, IntPtr pClassLinkage, ref IntPtr ppHullShader);
        CreateHullShaderFunc m_CreateHullShaderFunc;

        public int CreateDomainShader(IntPtr pShaderBytecode, ulong BytecodeLength, IntPtr pClassLinkage, ref IntPtr ppDomainShader)
        {
            if(m_CreateDomainShaderFunc==null){
                var fp = GetFunctionPointer(17);
                m_CreateDomainShaderFunc = (CreateDomainShaderFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateDomainShaderFunc));
            } 
            return  m_CreateDomainShaderFunc(m_ptr, pShaderBytecode, BytecodeLength, pClassLinkage, ref ppDomainShader);
        }
        delegate int CreateDomainShaderFunc(IntPtr self, IntPtr pShaderBytecode, ulong BytecodeLength, IntPtr pClassLinkage, ref IntPtr ppDomainShader);
        CreateDomainShaderFunc m_CreateDomainShaderFunc;

        public int CreateComputeShader(IntPtr pShaderBytecode, ulong BytecodeLength, IntPtr pClassLinkage, ref IntPtr ppComputeShader)
        {
            if(m_CreateComputeShaderFunc==null){
                var fp = GetFunctionPointer(18);
                m_CreateComputeShaderFunc = (CreateComputeShaderFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateComputeShaderFunc));
            } 
            return  m_CreateComputeShaderFunc(m_ptr, pShaderBytecode, BytecodeLength, pClassLinkage, ref ppComputeShader);
        }
        delegate int CreateComputeShaderFunc(IntPtr self, IntPtr pShaderBytecode, ulong BytecodeLength, IntPtr pClassLinkage, ref IntPtr ppComputeShader);
        CreateComputeShaderFunc m_CreateComputeShaderFunc;

        public int CreateClassLinkage(ref IntPtr ppLinkage)
        {
            if(m_CreateClassLinkageFunc==null){
                var fp = GetFunctionPointer(19);
                m_CreateClassLinkageFunc = (CreateClassLinkageFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateClassLinkageFunc));
            } 
            return  m_CreateClassLinkageFunc(m_ptr, ref ppLinkage);
        }
        delegate int CreateClassLinkageFunc(IntPtr self, ref IntPtr ppLinkage);
        CreateClassLinkageFunc m_CreateClassLinkageFunc;

        public int CreateBlendState(ref D3D11_BLEND_DESC pBlendStateDesc, ref IntPtr ppBlendState)
        {
            if(m_CreateBlendStateFunc==null){
                var fp = GetFunctionPointer(20);
                m_CreateBlendStateFunc = (CreateBlendStateFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateBlendStateFunc));
            } 
            return  m_CreateBlendStateFunc(m_ptr, ref pBlendStateDesc, ref ppBlendState);
        }
        delegate int CreateBlendStateFunc(IntPtr self, ref D3D11_BLEND_DESC pBlendStateDesc, ref IntPtr ppBlendState);
        CreateBlendStateFunc m_CreateBlendStateFunc;

        public int CreateDepthStencilState(ref D3D11_DEPTH_STENCIL_DESC pDepthStencilDesc, ref IntPtr ppDepthStencilState)
        {
            if(m_CreateDepthStencilStateFunc==null){
                var fp = GetFunctionPointer(21);
                m_CreateDepthStencilStateFunc = (CreateDepthStencilStateFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateDepthStencilStateFunc));
            } 
            return  m_CreateDepthStencilStateFunc(m_ptr, ref pDepthStencilDesc, ref ppDepthStencilState);
        }
        delegate int CreateDepthStencilStateFunc(IntPtr self, ref D3D11_DEPTH_STENCIL_DESC pDepthStencilDesc, ref IntPtr ppDepthStencilState);
        CreateDepthStencilStateFunc m_CreateDepthStencilStateFunc;

        public int CreateRasterizerState(ref D3D11_RASTERIZER_DESC pRasterizerDesc, ref IntPtr ppRasterizerState)
        {
            if(m_CreateRasterizerStateFunc==null){
                var fp = GetFunctionPointer(22);
                m_CreateRasterizerStateFunc = (CreateRasterizerStateFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateRasterizerStateFunc));
            } 
            return  m_CreateRasterizerStateFunc(m_ptr, ref pRasterizerDesc, ref ppRasterizerState);
        }
        delegate int CreateRasterizerStateFunc(IntPtr self, ref D3D11_RASTERIZER_DESC pRasterizerDesc, ref IntPtr ppRasterizerState);
        CreateRasterizerStateFunc m_CreateRasterizerStateFunc;

        public int CreateSamplerState(ref D3D11_SAMPLER_DESC pSamplerDesc, ref IntPtr ppSamplerState)
        {
            if(m_CreateSamplerStateFunc==null){
                var fp = GetFunctionPointer(23);
                m_CreateSamplerStateFunc = (CreateSamplerStateFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateSamplerStateFunc));
            } 
            return  m_CreateSamplerStateFunc(m_ptr, ref pSamplerDesc, ref ppSamplerState);
        }
        delegate int CreateSamplerStateFunc(IntPtr self, ref D3D11_SAMPLER_DESC pSamplerDesc, ref IntPtr ppSamplerState);
        CreateSamplerStateFunc m_CreateSamplerStateFunc;

        public int CreateQuery(ref D3D11_QUERY_DESC pQueryDesc, ref IntPtr ppQuery)
        {
            if(m_CreateQueryFunc==null){
                var fp = GetFunctionPointer(24);
                m_CreateQueryFunc = (CreateQueryFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateQueryFunc));
            } 
            return  m_CreateQueryFunc(m_ptr, ref pQueryDesc, ref ppQuery);
        }
        delegate int CreateQueryFunc(IntPtr self, ref D3D11_QUERY_DESC pQueryDesc, ref IntPtr ppQuery);
        CreateQueryFunc m_CreateQueryFunc;

        public int CreatePredicate(ref D3D11_QUERY_DESC pPredicateDesc, ref IntPtr ppPredicate)
        {
            if(m_CreatePredicateFunc==null){
                var fp = GetFunctionPointer(25);
                m_CreatePredicateFunc = (CreatePredicateFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreatePredicateFunc));
            } 
            return  m_CreatePredicateFunc(m_ptr, ref pPredicateDesc, ref ppPredicate);
        }
        delegate int CreatePredicateFunc(IntPtr self, ref D3D11_QUERY_DESC pPredicateDesc, ref IntPtr ppPredicate);
        CreatePredicateFunc m_CreatePredicateFunc;

        public int CreateCounter(ref D3D11_COUNTER_DESC pCounterDesc, ref IntPtr ppCounter)
        {
            if(m_CreateCounterFunc==null){
                var fp = GetFunctionPointer(26);
                m_CreateCounterFunc = (CreateCounterFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateCounterFunc));
            } 
            return  m_CreateCounterFunc(m_ptr, ref pCounterDesc, ref ppCounter);
        }
        delegate int CreateCounterFunc(IntPtr self, ref D3D11_COUNTER_DESC pCounterDesc, ref IntPtr ppCounter);
        CreateCounterFunc m_CreateCounterFunc;

        public int CreateDeferredContext(uint ContextFlags, ref IntPtr ppDeferredContext)
        {
            if(m_CreateDeferredContextFunc==null){
                var fp = GetFunctionPointer(27);
                m_CreateDeferredContextFunc = (CreateDeferredContextFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateDeferredContextFunc));
            } 
            return  m_CreateDeferredContextFunc(m_ptr, ContextFlags, ref ppDeferredContext);
        }
        delegate int CreateDeferredContextFunc(IntPtr self, uint ContextFlags, ref IntPtr ppDeferredContext);
        CreateDeferredContextFunc m_CreateDeferredContextFunc;

        public int OpenSharedResource(IntPtr hResource, ref Guid ReturnedInterface, ref IntPtr ppResource)
        {
            if(m_OpenSharedResourceFunc==null){
                var fp = GetFunctionPointer(28);
                m_OpenSharedResourceFunc = (OpenSharedResourceFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(OpenSharedResourceFunc));
            } 
            return  m_OpenSharedResourceFunc(m_ptr, hResource, ref ReturnedInterface, ref ppResource);
        }
        delegate int OpenSharedResourceFunc(IntPtr self, IntPtr hResource, ref Guid ReturnedInterface, ref IntPtr ppResource);
        OpenSharedResourceFunc m_OpenSharedResourceFunc;

        public int CheckFormatSupport(DXGI_FORMAT Format, ref uint pFormatSupport)
        {
            if(m_CheckFormatSupportFunc==null){
                var fp = GetFunctionPointer(29);
                m_CheckFormatSupportFunc = (CheckFormatSupportFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CheckFormatSupportFunc));
            } 
            return  m_CheckFormatSupportFunc(m_ptr, Format, ref pFormatSupport);
        }
        delegate int CheckFormatSupportFunc(IntPtr self, DXGI_FORMAT Format, ref uint pFormatSupport);
        CheckFormatSupportFunc m_CheckFormatSupportFunc;

        public int CheckMultisampleQualityLevels(DXGI_FORMAT Format, uint SampleCount, ref uint pNumQualityLevels)
        {
            if(m_CheckMultisampleQualityLevelsFunc==null){
                var fp = GetFunctionPointer(30);
                m_CheckMultisampleQualityLevelsFunc = (CheckMultisampleQualityLevelsFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CheckMultisampleQualityLevelsFunc));
            } 
            return  m_CheckMultisampleQualityLevelsFunc(m_ptr, Format, SampleCount, ref pNumQualityLevels);
        }
        delegate int CheckMultisampleQualityLevelsFunc(IntPtr self, DXGI_FORMAT Format, uint SampleCount, ref uint pNumQualityLevels);
        CheckMultisampleQualityLevelsFunc m_CheckMultisampleQualityLevelsFunc;

        public void CheckCounterInfo(ref D3D11_COUNTER_INFO pCounterInfo)
        {
            if(m_CheckCounterInfoFunc==null){
                var fp = GetFunctionPointer(31);
                m_CheckCounterInfoFunc = (CheckCounterInfoFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CheckCounterInfoFunc));
            } 
             m_CheckCounterInfoFunc(m_ptr, ref pCounterInfo);
        }
        delegate void CheckCounterInfoFunc(IntPtr self, ref D3D11_COUNTER_INFO pCounterInfo);
        CheckCounterInfoFunc m_CheckCounterInfoFunc;

        public int CheckCounter(ref D3D11_COUNTER_DESC pDesc, ref D3D11_COUNTER_TYPE pType, ref uint pActiveCounters, ref sbyte szName, ref uint pNameLength, ref sbyte szUnits, ref uint pUnitsLength, ref sbyte szDescription, ref uint pDescriptionLength)
        {
            if(m_CheckCounterFunc==null){
                var fp = GetFunctionPointer(32);
                m_CheckCounterFunc = (CheckCounterFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CheckCounterFunc));
            } 
            return  m_CheckCounterFunc(m_ptr, ref pDesc, ref pType, ref pActiveCounters, ref szName, ref pNameLength, ref szUnits, ref pUnitsLength, ref szDescription, ref pDescriptionLength);
        }
        delegate int CheckCounterFunc(IntPtr self, ref D3D11_COUNTER_DESC pDesc, ref D3D11_COUNTER_TYPE pType, ref uint pActiveCounters, ref sbyte szName, ref uint pNameLength, ref sbyte szUnits, ref uint pUnitsLength, ref sbyte szDescription, ref uint pDescriptionLength);
        CheckCounterFunc m_CheckCounterFunc;

        public int CheckFeatureSupport(D3D11_FEATURE Feature, IntPtr pFeatureSupportData, uint FeatureSupportDataSize)
        {
            if(m_CheckFeatureSupportFunc==null){
                var fp = GetFunctionPointer(33);
                m_CheckFeatureSupportFunc = (CheckFeatureSupportFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CheckFeatureSupportFunc));
            } 
            return  m_CheckFeatureSupportFunc(m_ptr, Feature, pFeatureSupportData, FeatureSupportDataSize);
        }
        delegate int CheckFeatureSupportFunc(IntPtr self, D3D11_FEATURE Feature, IntPtr pFeatureSupportData, uint FeatureSupportDataSize);
        CheckFeatureSupportFunc m_CheckFeatureSupportFunc;

        public int GetPrivateData(ref GUID guid, ref uint pDataSize, IntPtr pData)
        {
            if(m_GetPrivateDataFunc==null){
                var fp = GetFunctionPointer(34);
                m_GetPrivateDataFunc = (GetPrivateDataFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetPrivateDataFunc));
            } 
            return  m_GetPrivateDataFunc(m_ptr, ref guid, ref pDataSize, pData);
        }
        delegate int GetPrivateDataFunc(IntPtr self, ref GUID guid, ref uint pDataSize, IntPtr pData);
        GetPrivateDataFunc m_GetPrivateDataFunc;

        public int SetPrivateData(ref GUID guid, uint DataSize, IntPtr pData)
        {
            if(m_SetPrivateDataFunc==null){
                var fp = GetFunctionPointer(35);
                m_SetPrivateDataFunc = (SetPrivateDataFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetPrivateDataFunc));
            } 
            return  m_SetPrivateDataFunc(m_ptr, ref guid, DataSize, pData);
        }
        delegate int SetPrivateDataFunc(IntPtr self, ref GUID guid, uint DataSize, IntPtr pData);
        SetPrivateDataFunc m_SetPrivateDataFunc;

        public int SetPrivateDataInterface(ref GUID guid, IntPtr pData)
        {
            if(m_SetPrivateDataInterfaceFunc==null){
                var fp = GetFunctionPointer(36);
                m_SetPrivateDataInterfaceFunc = (SetPrivateDataInterfaceFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetPrivateDataInterfaceFunc));
            } 
            return  m_SetPrivateDataInterfaceFunc(m_ptr, ref guid, pData);
        }
        delegate int SetPrivateDataInterfaceFunc(IntPtr self, ref GUID guid, IntPtr pData);
        SetPrivateDataInterfaceFunc m_SetPrivateDataInterfaceFunc;

        public D3D_FEATURE_LEVEL GetFeatureLevel()
        {
            if(m_GetFeatureLevelFunc==null){
                var fp = GetFunctionPointer(37);
                m_GetFeatureLevelFunc = (GetFeatureLevelFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetFeatureLevelFunc));
            } 
            return  m_GetFeatureLevelFunc(m_ptr);
        }
        delegate D3D_FEATURE_LEVEL GetFeatureLevelFunc(IntPtr self);
        GetFeatureLevelFunc m_GetFeatureLevelFunc;

        public uint GetCreationFlags()
        {
            if(m_GetCreationFlagsFunc==null){
                var fp = GetFunctionPointer(38);
                m_GetCreationFlagsFunc = (GetCreationFlagsFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetCreationFlagsFunc));
            } 
            return  m_GetCreationFlagsFunc(m_ptr);
        }
        delegate uint GetCreationFlagsFunc(IntPtr self);
        GetCreationFlagsFunc m_GetCreationFlagsFunc;

        public int GetDeviceRemovedReason()
        {
            if(m_GetDeviceRemovedReasonFunc==null){
                var fp = GetFunctionPointer(39);
                m_GetDeviceRemovedReasonFunc = (GetDeviceRemovedReasonFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetDeviceRemovedReasonFunc));
            } 
            return  m_GetDeviceRemovedReasonFunc(m_ptr);
        }
        delegate int GetDeviceRemovedReasonFunc(IntPtr self);
        GetDeviceRemovedReasonFunc m_GetDeviceRemovedReasonFunc;

        public void GetImmediateContext(ref IntPtr ppImmediateContext)
        {
            if(m_GetImmediateContextFunc==null){
                var fp = GetFunctionPointer(40);
                m_GetImmediateContextFunc = (GetImmediateContextFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetImmediateContextFunc));
            } 
             m_GetImmediateContextFunc(m_ptr, ref ppImmediateContext);
        }
        delegate void GetImmediateContextFunc(IntPtr self, ref IntPtr ppImmediateContext);
        GetImmediateContextFunc m_GetImmediateContextFunc;

        public int SetExceptionMode(uint RaiseFlags)
        {
            if(m_SetExceptionModeFunc==null){
                var fp = GetFunctionPointer(41);
                m_SetExceptionModeFunc = (SetExceptionModeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SetExceptionModeFunc));
            } 
            return  m_SetExceptionModeFunc(m_ptr, RaiseFlags);
        }
        delegate int SetExceptionModeFunc(IntPtr self, uint RaiseFlags);
        SetExceptionModeFunc m_SetExceptionModeFunc;

        public uint GetExceptionMode()
        {
            if(m_GetExceptionModeFunc==null){
                var fp = GetFunctionPointer(42);
                m_GetExceptionModeFunc = (GetExceptionModeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetExceptionModeFunc));
            } 
            return  m_GetExceptionModeFunc(m_ptr);
        }
        delegate uint GetExceptionModeFunc(IntPtr self);
        GetExceptionModeFunc m_GetExceptionModeFunc;

    }
}
