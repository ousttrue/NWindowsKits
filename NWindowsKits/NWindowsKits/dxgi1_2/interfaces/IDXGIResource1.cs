// This source code was generated by ClangCaster
using System;
using System.Runtime.InteropServices;

namespace NWindowsKits
{
    // C:/Program Files (x86)/Windows Kits/10/Include/10.0.18362.0/shared/dxgi1_2.h:726
    public class IDXGIResource1 : IDXGIResource // 1
    {
        static Guid s_uuid = new Guid("30961379-4609-4a41-998e-54fe567ee0c1");
        public static new ref Guid IID => ref s_uuid;
        public override ref Guid GetIID() { return ref s_uuid; }

        public int CreateSubresourceSurface(uint index, ref IntPtr ppSurface)
        {
            if(m_CreateSubresourceSurfaceFunc==null){
                var fp = GetFunctionPointer(12);
                m_CreateSubresourceSurfaceFunc = (CreateSubresourceSurfaceFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateSubresourceSurfaceFunc));
            } 
            
            return  m_CreateSubresourceSurfaceFunc(m_ptr, index, ref ppSurface);
        }
        delegate int CreateSubresourceSurfaceFunc(IntPtr self, uint index, ref IntPtr ppSurface);
        CreateSubresourceSurfaceFunc m_CreateSubresourceSurfaceFunc;

        public int CreateSharedHandle(ref LPSECURITY_ATTRIBUTES pAttributes, uint dwAccess, [MarshalAs(UnmanagedType.LPWStr)] string lpName, ref IntPtr pHandle)
        {
            if(m_CreateSharedHandleFunc==null){
                var fp = GetFunctionPointer(13);
                m_CreateSharedHandleFunc = (CreateSharedHandleFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateSharedHandleFunc));
            } 
            
            return  m_CreateSharedHandleFunc(m_ptr, ref pAttributes, dwAccess, lpName, ref pHandle);
        }
        delegate int CreateSharedHandleFunc(IntPtr self, ref LPSECURITY_ATTRIBUTES pAttributes, uint dwAccess, [MarshalAs(UnmanagedType.LPWStr)] string lpName, ref IntPtr pHandle);
        CreateSharedHandleFunc m_CreateSharedHandleFunc;

    }
}
