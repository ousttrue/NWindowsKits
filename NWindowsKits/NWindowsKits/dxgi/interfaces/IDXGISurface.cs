// This source code was generated by ClangCaster
using System;
using System.Runtime.InteropServices;

namespace NWindowsKits
{
    // C:/Program Files (x86)/Windows Kits/10/Include/10.0.18362.0/shared/dxgi.h:913
    public class IDXGISurface : IDXGIDeviceSubObject // 1
    {
        static Guid s_uuid = new Guid("cafcb56c-6ac3-4889-bf47-9e23bbd260ec");
        public static new ref Guid IID => ref s_uuid;
        public override ref Guid GetIID() { return ref s_uuid; }

        public int GetDesc(ref DXGI_SURFACE_DESC pDesc)
        {
            if(m_GetDescFunc==null){
                var fp = GetFunctionPointer(8);
                m_GetDescFunc = (GetDescFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetDescFunc));
            } 
            return  m_GetDescFunc(m_ptr, ref pDesc);
        }
        delegate int GetDescFunc(IntPtr self, ref DXGI_SURFACE_DESC pDesc);
        GetDescFunc m_GetDescFunc;

        public int Map(ref DXGI_MAPPED_RECT pLockedRect, uint MapFlags)
        {
            if(m_MapFunc==null){
                var fp = GetFunctionPointer(9);
                m_MapFunc = (MapFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(MapFunc));
            } 
            return  m_MapFunc(m_ptr, ref pLockedRect, MapFlags);
        }
        delegate int MapFunc(IntPtr self, ref DXGI_MAPPED_RECT pLockedRect, uint MapFlags);
        MapFunc m_MapFunc;

        public int Unmap()
        {
            if(m_UnmapFunc==null){
                var fp = GetFunctionPointer(10);
                m_UnmapFunc = (UnmapFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(UnmapFunc));
            } 
            return  m_UnmapFunc(m_ptr);
        }
        delegate int UnmapFunc(IntPtr self);
        UnmapFunc m_UnmapFunc;

    }
}
