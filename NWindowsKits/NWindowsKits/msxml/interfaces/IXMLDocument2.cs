// This source code was generated by ClangCaster
using System;
using System.Runtime.InteropServices;

namespace NWindowsKits
{
    // C:/Program Files (x86)/Windows Kits/10/Include/10.0.18362.0/um/msxml.h:9091
    public class IXMLDocument2 : IDispatch // 1
    {
        static Guid s_uuid = new Guid("2b8de2fe-8d2d-11d1-b2fc-00c04fd915a9");
        public static new ref Guid IID => ref s_uuid;
        public override ref Guid GetIID() { return ref s_uuid; }

        public int get_root(ref IntPtr p)
        {
            if(m_get_rootFunc==null){
                var fp = GetFunctionPointer(7);
                m_get_rootFunc = (get_rootFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(get_rootFunc));
            } 
            return  m_get_rootFunc(m_ptr, ref p);
        }
        delegate int get_rootFunc(IntPtr self, ref IntPtr p);
        get_rootFunc m_get_rootFunc;

        public int get_fileSize(ref IntPtr p)
        {
            if(m_get_fileSizeFunc==null){
                var fp = GetFunctionPointer(8);
                m_get_fileSizeFunc = (get_fileSizeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(get_fileSizeFunc));
            } 
            return  m_get_fileSizeFunc(m_ptr, ref p);
        }
        delegate int get_fileSizeFunc(IntPtr self, ref IntPtr p);
        get_fileSizeFunc m_get_fileSizeFunc;

        public int get_fileModifiedDate(ref IntPtr p)
        {
            if(m_get_fileModifiedDateFunc==null){
                var fp = GetFunctionPointer(9);
                m_get_fileModifiedDateFunc = (get_fileModifiedDateFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(get_fileModifiedDateFunc));
            } 
            return  m_get_fileModifiedDateFunc(m_ptr, ref p);
        }
        delegate int get_fileModifiedDateFunc(IntPtr self, ref IntPtr p);
        get_fileModifiedDateFunc m_get_fileModifiedDateFunc;

        public int get_fileUpdatedDate(ref IntPtr p)
        {
            if(m_get_fileUpdatedDateFunc==null){
                var fp = GetFunctionPointer(10);
                m_get_fileUpdatedDateFunc = (get_fileUpdatedDateFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(get_fileUpdatedDateFunc));
            } 
            return  m_get_fileUpdatedDateFunc(m_ptr, ref p);
        }
        delegate int get_fileUpdatedDateFunc(IntPtr self, ref IntPtr p);
        get_fileUpdatedDateFunc m_get_fileUpdatedDateFunc;

        public int get_URL(ref IntPtr p)
        {
            if(m_get_URLFunc==null){
                var fp = GetFunctionPointer(11);
                m_get_URLFunc = (get_URLFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(get_URLFunc));
            } 
            return  m_get_URLFunc(m_ptr, ref p);
        }
        delegate int get_URLFunc(IntPtr self, ref IntPtr p);
        get_URLFunc m_get_URLFunc;

        public int put_URL(IntPtr p)
        {
            if(m_put_URLFunc==null){
                var fp = GetFunctionPointer(12);
                m_put_URLFunc = (put_URLFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(put_URLFunc));
            } 
            return  m_put_URLFunc(m_ptr, p);
        }
        delegate int put_URLFunc(IntPtr self, IntPtr p);
        put_URLFunc m_put_URLFunc;

        public int get_mimeType(ref IntPtr p)
        {
            if(m_get_mimeTypeFunc==null){
                var fp = GetFunctionPointer(13);
                m_get_mimeTypeFunc = (get_mimeTypeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(get_mimeTypeFunc));
            } 
            return  m_get_mimeTypeFunc(m_ptr, ref p);
        }
        delegate int get_mimeTypeFunc(IntPtr self, ref IntPtr p);
        get_mimeTypeFunc m_get_mimeTypeFunc;

        public int get_readyState(ref int pl)
        {
            if(m_get_readyStateFunc==null){
                var fp = GetFunctionPointer(14);
                m_get_readyStateFunc = (get_readyStateFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(get_readyStateFunc));
            } 
            return  m_get_readyStateFunc(m_ptr, ref pl);
        }
        delegate int get_readyStateFunc(IntPtr self, ref int pl);
        get_readyStateFunc m_get_readyStateFunc;

        public int get_charset(ref IntPtr p)
        {
            if(m_get_charsetFunc==null){
                var fp = GetFunctionPointer(15);
                m_get_charsetFunc = (get_charsetFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(get_charsetFunc));
            } 
            return  m_get_charsetFunc(m_ptr, ref p);
        }
        delegate int get_charsetFunc(IntPtr self, ref IntPtr p);
        get_charsetFunc m_get_charsetFunc;

        public int put_charset(IntPtr p)
        {
            if(m_put_charsetFunc==null){
                var fp = GetFunctionPointer(16);
                m_put_charsetFunc = (put_charsetFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(put_charsetFunc));
            } 
            return  m_put_charsetFunc(m_ptr, p);
        }
        delegate int put_charsetFunc(IntPtr self, IntPtr p);
        put_charsetFunc m_put_charsetFunc;

        public int get_version(ref IntPtr p)
        {
            if(m_get_versionFunc==null){
                var fp = GetFunctionPointer(17);
                m_get_versionFunc = (get_versionFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(get_versionFunc));
            } 
            return  m_get_versionFunc(m_ptr, ref p);
        }
        delegate int get_versionFunc(IntPtr self, ref IntPtr p);
        get_versionFunc m_get_versionFunc;

        public int get_doctype(ref IntPtr p)
        {
            if(m_get_doctypeFunc==null){
                var fp = GetFunctionPointer(18);
                m_get_doctypeFunc = (get_doctypeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(get_doctypeFunc));
            } 
            return  m_get_doctypeFunc(m_ptr, ref p);
        }
        delegate int get_doctypeFunc(IntPtr self, ref IntPtr p);
        get_doctypeFunc m_get_doctypeFunc;

        public int get_dtdURL(ref IntPtr p)
        {
            if(m_get_dtdURLFunc==null){
                var fp = GetFunctionPointer(19);
                m_get_dtdURLFunc = (get_dtdURLFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(get_dtdURLFunc));
            } 
            return  m_get_dtdURLFunc(m_ptr, ref p);
        }
        delegate int get_dtdURLFunc(IntPtr self, ref IntPtr p);
        get_dtdURLFunc m_get_dtdURLFunc;

        public int createElement(VARIANT vType, VARIANT var1, ref IntPtr ppElem)
        {
            if(m_createElementFunc==null){
                var fp = GetFunctionPointer(20);
                m_createElementFunc = (createElementFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(createElementFunc));
            } 
            return  m_createElementFunc(m_ptr, vType, var1, ref ppElem);
        }
        delegate int createElementFunc(IntPtr self, VARIANT vType, VARIANT var1, ref IntPtr ppElem);
        createElementFunc m_createElementFunc;

        public int get_async(ref short pf)
        {
            if(m_get_asyncFunc==null){
                var fp = GetFunctionPointer(21);
                m_get_asyncFunc = (get_asyncFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(get_asyncFunc));
            } 
            return  m_get_asyncFunc(m_ptr, ref pf);
        }
        delegate int get_asyncFunc(IntPtr self, ref short pf);
        get_asyncFunc m_get_asyncFunc;

        public int put_async(short f)
        {
            if(m_put_asyncFunc==null){
                var fp = GetFunctionPointer(22);
                m_put_asyncFunc = (put_asyncFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(put_asyncFunc));
            } 
            return  m_put_asyncFunc(m_ptr, f);
        }
        delegate int put_asyncFunc(IntPtr self, short f);
        put_asyncFunc m_put_asyncFunc;

    }
}
