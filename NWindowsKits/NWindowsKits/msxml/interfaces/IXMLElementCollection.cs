// This source code was generated by ClangCaster
using System;
using System.Runtime.InteropServices;

namespace NWindowsKits
{
    // C:/Program Files (x86)/Windows Kits/10/Include/10.0.18362.0/um/msxml.h:8663
    public class IXMLElementCollection : IDispatch
    {
        static Guid s_uuid = new Guid("65725580-9b5d-11d0-9bfe-00c04fc99c8e");
        public static new ref Guid IID => ref s_uuid;
        public override ref Guid GetIID() { return ref s_uuid; }

        public int put_length(int v)
        {
            if(m_put_lengthFunc==null){
                var fp = GetFunctionPointer(7);
                m_put_lengthFunc = (put_lengthFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(put_lengthFunc));
            } 
            return  m_put_lengthFunc(m_ptr, v);
        }
        delegate int put_lengthFunc(IntPtr self, int v);
        put_lengthFunc m_put_lengthFunc;

        public int get_length(ref int p)
        {
            if(m_get_lengthFunc==null){
                var fp = GetFunctionPointer(8);
                m_get_lengthFunc = (get_lengthFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(get_lengthFunc));
            } 
            return  m_get_lengthFunc(m_ptr, ref p);
        }
        delegate int get_lengthFunc(IntPtr self, ref int p);
        get_lengthFunc m_get_lengthFunc;

        public int get__newEnum(ref IntPtr ppUnk)
        {
            if(m_get__newEnumFunc==null){
                var fp = GetFunctionPointer(9);
                m_get__newEnumFunc = (get__newEnumFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(get__newEnumFunc));
            } 
            return  m_get__newEnumFunc(m_ptr, ref ppUnk);
        }
        delegate int get__newEnumFunc(IntPtr self, ref IntPtr ppUnk);
        get__newEnumFunc m_get__newEnumFunc;

        public int item(VARIANT var1, VARIANT var2, ref IntPtr ppDisp)
        {
            if(m_itemFunc==null){
                var fp = GetFunctionPointer(10);
                m_itemFunc = (itemFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(itemFunc));
            } 
            return  m_itemFunc(m_ptr, var1, var2, ref ppDisp);
        }
        delegate int itemFunc(IntPtr self, VARIANT var1, VARIANT var2, ref IntPtr ppDisp);
        itemFunc m_itemFunc;

    }
}
