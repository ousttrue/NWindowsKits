// This source code was generated by ClangCaster
using System;
using System.Runtime.InteropServices;

namespace NWindowsKits
{
    // C:/Program Files (x86)/Windows Kits/10/Include/10.0.18362.0/um/msxml.h:7380
    public class IXMLDOMParseError : IDispatch // 1
    {
        static Guid s_uuid = new Guid("3efaa426-272f-11d2-836f-0000f87a7782");
        public static new ref Guid IID => ref s_uuid;
        public override ref Guid GetIID() { return ref s_uuid; }

        public int get_errorCode(ref int errorCode)
        {
            if(m_get_errorCodeFunc==null){
                var fp = GetFunctionPointer(7);
                m_get_errorCodeFunc = (get_errorCodeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(get_errorCodeFunc));
            } 
            return  m_get_errorCodeFunc(m_ptr, ref errorCode);
        }
        delegate int get_errorCodeFunc(IntPtr self, ref int errorCode);
        get_errorCodeFunc m_get_errorCodeFunc;

        public int get_url(ref IntPtr urlString)
        {
            if(m_get_urlFunc==null){
                var fp = GetFunctionPointer(8);
                m_get_urlFunc = (get_urlFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(get_urlFunc));
            } 
            return  m_get_urlFunc(m_ptr, ref urlString);
        }
        delegate int get_urlFunc(IntPtr self, ref IntPtr urlString);
        get_urlFunc m_get_urlFunc;

        public int get_reason(ref IntPtr reasonString)
        {
            if(m_get_reasonFunc==null){
                var fp = GetFunctionPointer(9);
                m_get_reasonFunc = (get_reasonFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(get_reasonFunc));
            } 
            return  m_get_reasonFunc(m_ptr, ref reasonString);
        }
        delegate int get_reasonFunc(IntPtr self, ref IntPtr reasonString);
        get_reasonFunc m_get_reasonFunc;

        public int get_srcText(ref IntPtr sourceString)
        {
            if(m_get_srcTextFunc==null){
                var fp = GetFunctionPointer(10);
                m_get_srcTextFunc = (get_srcTextFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(get_srcTextFunc));
            } 
            return  m_get_srcTextFunc(m_ptr, ref sourceString);
        }
        delegate int get_srcTextFunc(IntPtr self, ref IntPtr sourceString);
        get_srcTextFunc m_get_srcTextFunc;

        public int get_line(ref int lineNumber)
        {
            if(m_get_lineFunc==null){
                var fp = GetFunctionPointer(11);
                m_get_lineFunc = (get_lineFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(get_lineFunc));
            } 
            return  m_get_lineFunc(m_ptr, ref lineNumber);
        }
        delegate int get_lineFunc(IntPtr self, ref int lineNumber);
        get_lineFunc m_get_lineFunc;

        public int get_linepos(ref int linePosition)
        {
            if(m_get_lineposFunc==null){
                var fp = GetFunctionPointer(12);
                m_get_lineposFunc = (get_lineposFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(get_lineposFunc));
            } 
            return  m_get_lineposFunc(m_ptr, ref linePosition);
        }
        delegate int get_lineposFunc(IntPtr self, ref int linePosition);
        get_lineposFunc m_get_lineposFunc;

        public int get_filepos(ref int filePosition)
        {
            if(m_get_fileposFunc==null){
                var fp = GetFunctionPointer(13);
                m_get_fileposFunc = (get_fileposFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(get_fileposFunc));
            } 
            return  m_get_fileposFunc(m_ptr, ref filePosition);
        }
        delegate int get_fileposFunc(IntPtr self, ref int filePosition);
        get_fileposFunc m_get_fileposFunc;

    }
}
