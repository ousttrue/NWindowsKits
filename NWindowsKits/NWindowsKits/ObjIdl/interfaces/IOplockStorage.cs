// This source code was generated by ClangCaster
using System;
using System.Runtime.InteropServices;

namespace NWindowsKits
{
    // C:/Program Files (x86)/Windows Kits/10/Include/10.0.18362.0/um/ObjIdl.h:13448
    public class IOplockStorage : IUnknown // 1
    {
        static Guid s_uuid = new Guid("8d19c834-8879-11d1-83e9-00c04fc2c6d4");
        public static new ref Guid IID => ref s_uuid;
        public override ref Guid GetIID() { return ref s_uuid; }

        public int CreateStorageEx([MarshalAs(UnmanagedType.LPWStr)] string pwcsName, uint grfMode, uint stgfmt, uint grfAttrs, ref Guid riid, ref IntPtr ppstgOpen)
        {
            if(m_CreateStorageExFunc==null){
                var fp = GetFunctionPointer(3);
                m_CreateStorageExFunc = (CreateStorageExFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(CreateStorageExFunc));
            } 
            
            return  m_CreateStorageExFunc(m_ptr, pwcsName, grfMode, stgfmt, grfAttrs, ref riid, ref ppstgOpen);
        }
        delegate int CreateStorageExFunc(IntPtr self, [MarshalAs(UnmanagedType.LPWStr)] string pwcsName, uint grfMode, uint stgfmt, uint grfAttrs, ref Guid riid, ref IntPtr ppstgOpen);
        CreateStorageExFunc m_CreateStorageExFunc;

        public int OpenStorageEx([MarshalAs(UnmanagedType.LPWStr)] string pwcsName, uint grfMode, uint stgfmt, uint grfAttrs, ref Guid riid, ref IntPtr ppstgOpen)
        {
            if(m_OpenStorageExFunc==null){
                var fp = GetFunctionPointer(4);
                m_OpenStorageExFunc = (OpenStorageExFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(OpenStorageExFunc));
            } 
            
            return  m_OpenStorageExFunc(m_ptr, pwcsName, grfMode, stgfmt, grfAttrs, ref riid, ref ppstgOpen);
        }
        delegate int OpenStorageExFunc(IntPtr self, [MarshalAs(UnmanagedType.LPWStr)] string pwcsName, uint grfMode, uint stgfmt, uint grfAttrs, ref Guid riid, ref IntPtr ppstgOpen);
        OpenStorageExFunc m_OpenStorageExFunc;

    }
}
